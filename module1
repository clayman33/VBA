'Public datasheet As Worksheet
Public controlsheet As Worksheet
Public FilePath As String
Public htmlStr As String
Public htmlHeader As String
Public optionalHeader As String
Public optionalContent As String
Public headerContent As String
Public htmlRow As String
Public htmlTable As String
Public htmlCount As Integer

Sub GetFormData_Click()
Set controlsheet = ThisWorkbook.Worksheets("Control")
Application.DisplayAlerts = False
 If controlsheet.Cells(7, 2).Text = "IL" Then
  GetFilesDataInFormControl ThisWorkbook.Path & "\IL Forms", True, 14, 1
  ElseIf controlsheet.Cells(7, 2).Text = "MO" Then
   GetFilesDataInFormControl ThisWorkbook.Path & "\MO Forms", True, 14, 1
   End If
Application.DisplayAlerts = True
controlsheet.Range("A12:A10000").AutoFilter 1, "<>", , , False
MsgBox "Copied All MasterSheet data into this excel"

End Sub
Sub Generate_All_Forms_Click()

    
    Dim count_of_sheets As Integer
    Dim sheetName As String
    Dim i As Integer
    
    'Set DataSheet = ThisWorkbook.Worksheets("Data")
    'Set controlsheet = ThisWorkbook.Worksheets("Control")
    'filePath = Worksheets("Control").Cells(6, 2).Text
    
    Set controlsheet = ThisWorkbook.Worksheets("Control")
    
       
    count_of_sheets = controlsheet.Cells(11, 3)
    For i = 11 To (count_of_sheets + 1500)
        sheetName = controlsheet.Cells(i, 1).Text
        'If (controlsheet.Cells(i, 2) = "IL") Then
            'filePath = Worksheets("Control").Cells(6, 2).Text + SheetName + ".html"
        'ElseIf (controlsheet.Cells(i, 2) = "MO") Then
            'filePath = Worksheets("Control").Cells(6, 2).Text + SheetName + ".html"
        'End If
      If (sheetName <> Empty) Then
        BuildContent sheetName, controlsheet.Cells(i, 2).Text, i, controlsheet.Cells(8, 2).Text
        If controlsheet.Cells(7, 2).Text = "IL" And controlsheet.Cells(8, 2).Text = "Local" Then
            FilePath = ThisWorkbook.Path & "\IL Forms\runtime-html\LocalBuild\" + sheetName + ".html"
        ElseIf controlsheet.Cells(7, 2).Text = "MO" And controlsheet.Cells(8, 2).Text = "Local" Then
            FilePath = ThisWorkbook.Path & "\MO Forms\runtime-html\LocalBuild\" + sheetName + ".html"
        ElseIf controlsheet.Cells(7, 2).Text = "IL" And controlsheet.Cells(8, 2).Text = "Prod" Then
            FilePath = ThisWorkbook.Path & "\IL Forms\runtime-html\ProdBuild\" + sheetName + "_IL.html"
        ElseIf controlsheet.Cells(7, 2).Text = "MO" And controlsheet.Cells(8, 2).Text = "Prod" Then
            FilePath = ThisWorkbook.Path & "\MO Forms\runtime-html\ProdBuild\" + sheetName + "_MO.html"
        End If
        
        UpdateHTMLFile FilePath
        End If
    Next
    
    MsgBox "Generated All forms. Are you sure want to delete all sheets?"
    Application.DisplayAlerts = False
    For Each ws In ThisWorkbook.Worksheets
    If ws.Name <> "Control" Then
      '  ws.Delete
    End If
    Next
    Application.DisplayAlerts = True
    

    
End Sub

Sub Generate_CF_Sheets_Click()
    
    Dim count_of_sheets As Integer
    Dim i As Integer
    Dim sheetName As String
    
    'Set DataSheet = ThisWorkbook.Worksheets("Data")
    Set controlsheet = ThisWorkbook.Worksheets("Control")
    
    controlsheet.Range("A11:B1000").Clear
    'DataSheet.Range("E2:E4000").AdvancedFilter Action:=xlFilterCopy, CopyToRange:=ControlSheet.Range("A11"), Unique:=True
    
    'DataSheet.Cells.AutoFilter
    
    count_of_sheets = controlsheet.Cells(11, 3)
    
    For i = 11 To (count_of_sheets + 10)
        sheetName = controlsheet.Cells(i, 1).Text
        'FilterAndPasteDataToSeperateSheet SheetName
    Next
    
    controlsheet.Columns("E:H").Hidden = True
    'DataSheet.Visible = xlSheetHidden
    
End Sub

Sub FilterAndPasteDataToSeperateSheet(sheetName As String)
    Dim datasheet As Worksheet
    Set datasheet = ThisWorkbook.Worksheets("Data")
    Dim TransfersSheet As Worksheet
    Dim controlsheet As Worksheet
    Set controlsheet = ThisWorkbook.Worksheets("Control")

    datasheet.Range("E1").AutoFilter Field:=5, Criteria1:=sheetName
    Dim CopyRng, DataRng As Range
    Set DataRng = datasheet.Range("$A$1:$AA$4630")
    Set CopyRng = DataRng.SpecialCells(xlCellTypeVisible)


    If DoesSheetExist(sheetName) Then
        Set TransfersSheet = Worksheets(sheetName)
        TransfersSheet.Delete
    End If

    'create transfers sheet
    Set TransfersSheet = Worksheets.Add
    TransfersSheet.Name = sheetName

    'paste the copied range to the transfers sheet
    CopyRng.Copy
    TransfersSheet.Range("A1").PasteSpecial Paste:=xlPasteAll

End Sub

Function DoesSheetExist(WorksheetName As String) As Boolean
    Dim sheet As Worksheet


    For Each sheet In ThisWorkbook.Worksheets
        If Application.Proper(sheet.Name) = Application.Proper(WorksheetName) Then
            DoesSheetExist = True
            Exit Function
        End If
    Next sheet
DoesSheetExist = False
End Function




Public Sub UpdateHTMLFile(FilePath As String)

    Dim fso As Object
    Dim myFile As Object


       Set fso = CreateObject("Scripting.FileSystemObject")

       Set myFile = fso.CreateTextFile(FilePath, True)

       myFile.WriteLine htmlStr

    myFile.Close
    Set fso = Nothing

End Sub

Sub GetFilesDataInFormControl(SourceFolderName As String, Subfolders As Boolean, r As Long, i As Integer)

'--- For Example:Folder Name= "D:\Folder Name\" and Flag as Yes or No

Dim fso As Scripting.FileSystemObject
Dim SourceFolder As Scripting.folder, SubFolder As Scripting.folder
Dim FileItem As Scripting.File
Dim htmlFileName As String

Dim workSheetPath
'Dim r As Long
    Set fso = New Scripting.FileSystemObject
    Set SourceFolder = fso.GetFolder(SourceFolderName)
Set controlsheet = ThisWorkbook.Worksheets("Control")
    '--- This is for displaying, whereever you want can be configured

   
    For Each FileItem In SourceFolder.Files
            
        If (FileItem.Type = "Microsoft Excel Macro-Enabled Worksheet" And FileItem.Name <> "ValidationTable.xlsm" And FileItem.Name = "MasterInput.xlsm") Then
          workSheetPath = FileItem.Path
          Application.DisplayAlerts = False
          CopyDataFromInnerFolder workSheetPath, r
          Application.DisplayAlerts = True
          i = i + 1
          If controlsheet.Cells(7, 2).Text = "IL" Then
            controlsheet.Cells(r - 3, 2).Formula = "IL"
            Else
            controlsheet.Cells(r - 3, 2).Formula = "MO"
            End If
              
         'CopyDataFromInnerFolder FileItem.Name, FileItem.Path, "D:\Projects\Ameren-VIdhya-GIT\Completion_Forms\HTML_Forms\Consolidated\FormControl.xlsm"
         ElseIf (FileItem.Type = "JPG File") Or (FileItem.Type = "PNG File") Then
          htmlFileName = ThisWorkbook.Path & "\IL Forms\runtime-html\" & FileItem.Name
          FileCopy FileItem.Path, htmlFileName
         End If
        r = r + 1   ' next row number
    Next
    
   
   
  
    '--- This is the Function to go each and Every Folder and get the Files. This is a Nested-Function Calling.

    If Subfolders = True Then
        For Each SubFolder In SourceFolder.Subfolders
            GetFilesDataInFormControl SubFolder.Path, True, r, i
        Next SubFolder
    End If
 controlsheet.Cells(11, 3).Formula = i
    Set FileItem = Nothing
    Set SourceFolder = Nothing
    Set fso = Nothing
End Sub

Sub CopyDataFromInnerFolder(source, r As Long)
Dim x As Workbook
Dim y As Workbook
 Dim sheetName As String
 Dim control As Worksheet
 
    
    Dim TransfersSheet As Worksheet

'## Open both workbooks first:
  Set x = Workbooks.Open(source)
   'Set x = ActiveWorkbook
If Not x Is Nothing Then
    Set datasheet = x.Sheets("FormData")
    'Set control = x.Sheets("Control")
    Dim CopyRng, DataRng As Range
    'DataSheet.Range("E1").AutoFilter Field:=5, Criteria1:=SheetName
    Set DataRng = datasheet.Range("$A$1:$AH$4630")
    Set CopyRng = DataRng.SpecialCells(xlCellTypeVisible)
        If datasheet.Cells(2, 5) <> Empty Then
        sheetName = datasheet.Cells(2, 5).Text
       
        End If

    If sheetName <> Empty Then
    If DoesSheetExist(sheetName) Then
        Set TransfersSheet = ThisWorkbook.Worksheets(sheetName)
        TransfersSheet.Delete
    End If

    'create transfers sheet
    Set TransfersSheet = ThisWorkbook.Worksheets.Add
    If (sheetName <> Empty) Then
        TransfersSheet.Name = sheetName
           'paste the copied range to the transfers sheet
    CopyRng.Copy TransfersSheet.Range("A1")
    controlsheet.Cells(r - 3, 1).Formula = sheetName
    'controlsheet.Cells(r - 3, 4).Formula = control.Cells(28, 9).Text
    'TransfersSheet.Range("A1").PasteSpecial Paste:=xlPasteAll
    End If

    'paste the copied range to the transfers sheet
'x.Sheets("formData").Range("A1").Copy


'Close x:
'x.Close


End If
End If
x.Close

End Sub

Sub BuildContent(sheetName As String, typename As String, rownum As Integer, buildType As String)
     Dim htmlHeader As String
    headerContent = "<!DOCTYPE html><html><head>"
    If (buildType = Empty) Then
        headerContent = headerContent + "<script src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js'></script><script src='BusinessLogic.js'></script><link href='custom-style.css' rel='stylesheet'></head><body>  <form action='/action_page.php' class='" + sheetName + "'>"
    ElseIf (LCase(buildType) = "local") Then
        headerContent = headerContent + "<script src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js'></script><script src='BusinessLogic.js'></script><link href='custom-style.css' rel='stylesheet'></head><body>  <form action='/action_page.php' class='" + sheetName + "'>"
    ElseIf (LCase(buildType) = "prod") Then
        headerContent = headerContent + "<script src='BusinessLogic.js'></script><link href='custom-style.css' rel='stylesheet'></head><body>  <form action='/action_page.php' class='" + sheetName + "'>"
    End If
    headerContent = headerContent + "<h2 class='main-header'>#Title#</h2><div style='float: left; margin-left: 2%;' ><button id='btnGeneratejson' type='button' onclick='Generatejson()' style='background-color:rgb(2,113,182); color: white;'>Generate json</button></div><div class='doc-info'>"
    If (typename = "MO") Then
        headerContent = headerContent + "<b>MO REF DOC: </b><l>#REFDOC#</l><br>"
    Else
        headerContent = headerContent + "<b>REF DOC: </b><l>#REFDOC#</l><br>"
    End If
    'headerContent = headerContent + "<div class='doc-info'><b>REF DOC: </b>#REFDOC#<br>"
    headerContent = headerContent + "<b>BASE NAME: </b><l>#BaseName#</l><br><b>REVISION DATE: </b><l>#REVDATE#</l><br><b>REVISION NO: </b><l>#REVNO#</l><br><b>TASK TYPE: </b><l>#TASKTYPE#</l><br></div>"
    
    optionalHeader = "<div class='completiontd'><table border='0' style='table-layout: fixed; margin-left:0%; margin-right: 0%'>" + _
    "<tbody>#DataContent#</tbody>" + _
    "</table></div>"
    
    headerContent = headerContent + "#DataLabel#<div class='completiontd'><b>ACTION PERFORMED CODE: </b>" + _
    "#ActionPerformed#</div><div class='completiontd'><b>PREREQUISITES: </b></div>" + _
        "<div class='completiontd'><table border=0 class='prerequisite'>" + _
        "<tr><td><b>ABBREVIATIONS:</b>#Abbreviations#</td></tr><tr></tr><tr></tr><tr></tr>" + _
                "<tr><td><b>TOOLS: </b>#Tools#</td></tr><tr></tr><tr></tr><tr></tr>" + _
                "<tr><td><b>PARTS: </b>#Parts#</td></tr><tr></tr><tr></tr><tr></tr><tr></tr>" + _
        "<tr><td><b>CLEARANCES AND PERMITS: </b>#Clearance#</td></tr></table></div><div class='completiontd'><b>SAFETY: </b>#Safety#</div>"

    Dim isTableVisible As String
    Dim datasheet As Worksheet
    Set datasheet = ThisWorkbook.Worksheets(sheetName)
    Dim controlsheet As Worksheet
    Set controlsheet = ThisWorkbook.Worksheets("Control")
    Dim htmlTable As String
    Dim htmlRow As String
    Dim prevStepString As String
    Dim data As Variant
    Dim rowcount As Integer
    Dim prevStep As Integer
   Dim formName As String
    
    prevStep = 1
    prevStepString = "1"

    rowcount = Worksheets(sheetName).UsedRange.Rows.Count
    
    Dim toolsArray(0 To 10) As String
    Dim abbreviationsArray(0 To 10) As String
    Dim partsArray(0 To 30) As String
    Dim clearanceArray(0 To 30) As String
    Dim dataArray(0 To 20) As String
    Dim partsSubArray(0 To 30) As String
    Dim dropDownArray(0 To 20) As String
    Dim safetyArray(0 To 10) As String
    
    Dim toolsIndex As Integer
  Dim abbreviationsIndex As Integer
    Dim partsIndex As Integer
    Dim partsSubIndex As Integer
    Dim clearanceIndex As Integer
    Dim dataIndex As Integer
    Dim dropDownIndex As Integer
    Dim checkBoxIndex As Integer
    Dim safetyIndex As Integer
    
    Dim toolsHtml As String
    Dim partsHtml As String
    Dim safetyHtml As String
    Dim abbreviationsHtml As String
    Dim clearanceHtml As String
    Dim dataHtml As String
    Dim partsSubHtml As String
    Dim WarningRangeMin As String
    Dim WarningRangeMax As String
    Dim ErrorRangeMin As String
    Dim ErrorRangeMax As String
    Dim dropDownData As Variant
    Dim lineValidation As String
    Dim i, j, k As Integer
    Dim checkBoxData As Variant
    Dim chkBoxrows As Integer
    Dim errorMinMessage As String
    Dim errorMaxMessage As String
    Dim warningMinMessage As String
    Dim warningMaxMessage As String
    
    Dim ID_List(0 To 500) As String
    Dim id_index As Integer
    
    id_index = -1
    
    toolsHtml = ""
    partsHtml = ""
    abbreviationsHtml = ""
    dataHtml = ""
    partsSubHtml = ""
    WarningRangeMin = "9999999999"
    WarningRangeMax = "9999999999"
    ErrorRangeMin = "9999999999"
    ErrorRangeMax = "9999999999"
    dataIndex = -1
    dropDownIndex = -1
    
    htmlRow = headerContent
    partsIndex = -1
    partsSubIndex = -1
    clearanceIndex = -1
    safetyIndex = -1
    toolsIndex = -1
    abbreviationsIndex = -1
    
    For i = 2 To rowcount
        WarningRangeMin = "9999999999"
        WarningRangeMax = "9999999999"
        ErrorRangeMin = "9999999999"
        ErrorRangeMax = "9999999999"
        
        errorMinMessage = ""
        errorMaxMessage = ""
        warningMinMessage = ""
        warningMaxMessage = ""
        
        'prevStepString = CStr(prevStep)
        formName = """" + sheetName + """"
        
        If (datasheet.Cells(i, 26).Text <> Empty) Then
            lineValidation = datasheet.Cells(i, 26).Text 'changed i, 30 to i, 26
            'DeduceValidationV2 lineValidation, CInt(datasheet.Cells(i, 2).Text), CInt(i), sheetName
            GetCondition lineValidation, CInt(datasheet.Cells(i, 2).Text), CInt(i), sheetName
            GetStatement lineValidation, CInt(datasheet.Cells(i, 2).Text), CInt(i), sheetName
        End If
        
        'Drop Down value capture:
        If (LCase(datasheet.Cells(i, 13).Text) = "dropdown") Then
            If datasheet.Cells(i, 14).Text <> Empty Then
        
                dropDownData = Split(Replace(Replace(datasheet.Cells(i, 14).Text, "[", ""), "]", ""), ",")
                dropDownIndex = UBound(dropDownData) - LBound(dropDownData)
            End If
        End If
        
        'Replacing space with underscore for MeterID:
        If (InStr(datasheet.Cells(i, 4).Text, " ") > 0) Then
            datasheet.Cells(i, 4).Value = Replace(datasheet.Cells(i, 4).Text, " ", "_")
        End If
        
        'CheckBox List value capture:
        If datasheet.Cells(i, 13).Text = "CheckBoxList" Then
            If datasheet.Cells(i, 14).Text <> Empty Then
        
            checkBoxData = Split(Replace(Replace(datasheet.Cells(i, 14).Text, "[", ""), "]", ""), ",")
            checkBoxIndex = UBound(checkBoxData) - LBound(checkBoxData)
            chkBoxrows = Round(checkBoxIndex / 2, 0)
            
            End If
        End If
        
        
        'Update to Add previous reading and next reading
        'based on input on Meter ID column
        'If datasheet.Cells(i, 4).Text <> Empty Then
            'datasheet.Cells(i, 10).Value = "ReadingsHistory"
       ' End If
        
        
        
        'Read in the ranges for warning range:
        If datasheet.Cells(i, 18).Text <> Empty Then
          WarningRangeMin = datasheet.Cells(i, 18).Text
        End If
        
        If datasheet.Cells(i, 19).Text <> Empty Then
            WarningRangeMax = datasheet.Cells(i, 19).Text
        End If
        
        'Read in the ranges for error Ranges:
        If datasheet.Cells(i, 20).Text <> Empty Then
            ErrorRangeMin = datasheet.Cells(i, 20).Text
        End If
        
        If datasheet.Cells(i, 21).Text <> Empty Then
            ErrorRangeMax = datasheet.Cells(i, 21).Text
        End If
        
        'Read in the custom error / warning messages to be displayed to the user:
        If datasheet.Cells(i, 22).Text <> Empty Then
            warningMinMessage = datasheet.Cells(i, 22).Text
        End If
        
        If datasheet.Cells(i, 23).Text <> Empty Then
            warningMinMessage = datasheet.Cells(i, 23).Text
        End If
        
        If datasheet.Cells(i, 24).Text <> Empty Then
            warningMinMessage = datasheet.Cells(i, 24).Text
        End If
        
        If datasheet.Cells(i, 25).Text <> Empty Then
            warningMinMessage = datasheet.Cells(i, 25).Text
        End If

        'Underline data goes here
        If datasheet.Cells(i, 10).Text = "Input-Underlined" Then
            htmlRow = Replace(htmlRow, "#DataLabel#", optionalHeader)
            dataIndex = dataIndex + 1
            dataArray(dataIndex) = datasheet.Cells(i, 6).Text 'Replace(Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "—", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "“", "&ldquo;"), "”", "&rdquo;")
        End If
            
        'Replace the title:
        If datasheet.Cells(i, 10).Text = "Main-Header" Then
            htmlRow = Replace(htmlRow, "#Title#", Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;"))
        End If
    
        'Replace the document info:
        If datasheet.Cells(i, 10).Text = "Doc-Info" Then
            data = Split(Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;"), ",")
            htmlRow = Replace(htmlRow, "#REFDOC#", data(0))
            htmlRow = Replace(htmlRow, "#BaseName#", data(1))
            htmlRow = Replace(htmlRow, "#REVDATE#", data(2))
            htmlRow = Replace(htmlRow, "#REVNO#", data(3))
             If UBound(data) - LBound(data) > 3 Then
                tasklength = UBound(data) - LBound(data)
                tasktype = data(4)
                For t = 5 To tasklength
                 tasktype = tasktype + "," + data(t)
                Next t
                htmlRow = Replace(htmlRow, "#TASKTYPE#", tasktype)
            End If
        End If
        
        'Replace Action Performed:
        If datasheet.Cells(i, 10).Text = "Action-Performed-Code" Then
            htmlRow = Replace(htmlRow, "#ActionPerformed#", Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;"), "‘", "&lsquo;"), "’", "&rsquo;"))
        End If
    
        'Obtain the list of tools, abbreviations and Clearance
        If datasheet.Cells(i, 10).Text = "Pre-Req-Abbreviations" Then
            abbreviationsIndex = abbreviationsIndex + 1
            abbreviationsArray(abbreviationsIndex) = Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;")
        End If

        If datasheet.Cells(i, 10).Text = "Pre-Req-Parts" Then
            partsIndex = partsIndex + 1
            If (controlsheet.Cells(7, 2).Text = "MO") Then
            partsArray(partsIndex) = "<div style='margin-left:2.5em'>" + "<li>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</li>" + "</div>"
            Else
            partsArray(partsIndex) = "<div style='margin-left:2.5em'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</div>"
            End If
        
        End If
        
        If datasheet.Cells(i, 10).Text = "Pre-Req-Parts-Sub" Then
            partsIndex = partsIndex + 1
            partsArray(partsIndex) = "<div style='margin-left:4.5em'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</div>"
        End If
    
        If datasheet.Cells(i, 10).Text = "Pre-Req-Tools" Then
            toolsIndex = toolsIndex + 1
            toolsArray(toolsIndex) = Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;")
        End If
    
        If datasheet.Cells(i, 10).Text = "Pre-Req-Clearance" Then
            'htmlRow = Replace(htmlRow, "#Clearance#", Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"),"‘","&lsquo;"),"’","&rsquo;"))
            clearanceIndex = clearanceIndex + 1
            If (controlsheet.Cells(7, 2).Text = "MO") Then
            clearanceArray(clearanceIndex) = "<li>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</li>"
            Else
            clearanceArray(clearanceIndex) = Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;")
            End If
        End If
        
        'Obtain the list of safety
        If datasheet.Cells(i, 10).Text = "Safety" Then
            safetyIndex = safetyIndex + 1
             If (controlsheet.Cells(7, 2).Text = "MO") Then
                safetyArray(safetyIndex) = "<div style='margin-left:2.5em'>" + "<li>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</li>" + "</div>"
             Else
             safetyArray(safetyIndex) = "<div style='margin-left:2.5em'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</div>"
             End If
        End If
        
        'Change the Type to ReadingHistory
        If (datasheet.Cells(i, 4).Text <> Empty) Then
            If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                If (LCase(datasheet.Cells(i, 13).Text) <> "dropdown" And LCase(datasheet.Cells(i, 13).Text) <> "date" And LCase(datasheet.Cells(i, 13).Text) <> "textbox") Then
                    datasheet.Cells(i, 10).Value = "ReadingsHistory"
                End If
            End If
        End If
        'Go through the rest of the rows for the Body
        If datasheet.Cells(i, 10).Text = "Header" Then
            'htmlRow = htmlRow + "</div>"
            If (controlsheet.Cells(7, 2).Text = "MO") Then
                htmlRow = htmlRow + "<div class= 'Header formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNum=" + datasheet.Cells(i, 3).Text + "> <label class='completionLabel'> <u><b style='padding-left: 15px;color: rgb(2, 113, 182)'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</b></u></label></div>"
            ElseIf (controlsheet.Cells(7, 2).Text = "IL" And datasheet.Cells(i + 1, 10).Text <> "Steps") Then
                htmlRow = htmlRow + "<div class= 'Header formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNum=" + datasheet.Cells(i, 3).Text + "> <label class='completionLabel'> <u><b style='padding-left: 15px;color: rgb(2, 113, 182)'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</b></u></label></div>"
            End If
        End If
        ' Call new procedure here
        htmlRow = GetHTMLForSteps(sheetName, htmlRow, datasheet, CInt(i), WarningRangeMin, WarningRangeMax, ErrorRangeMin, ErrorRangeMax, checkBoxData, checkBoxIndex, chkBoxrows, dropDownData, dropDownIndex)
        htmlRow = GetHTMLForTypes(sheetName, htmlRow, datasheet, CInt(i), WarningRangeMin, WarningRangeMax, ErrorRangeMin, ErrorRangeMax, checkBoxData, checkBoxIndex, chkBoxrows, dropDownData, dropDownIndex)
     
     
    Next
    
    For j = 0 To toolsIndex
        toolsHtml = toolsHtml + "<div style='margin-left:2.5em'>" + toolsArray(j) + "</div>"
    Next
    
    For j = 0 To abbreviationsIndex
        abbreviationsHtml = abbreviationsHtml + "<div style='margin-left:2.5em'>" + abbreviationsArray(j) + "</div>"
    Next
    
    For j = 0 To partsIndex
        partsHtml = partsHtml + "<ui>" + partsArray(j) + "</ui>"
    Next
    
    For j = 0 To dataIndex
        dataHtml = dataHtml + "<tr><td style='width: 120px; float: left; margin-bottom:10px;'><b>" + dataArray(j) + "</b></td><td style='float: left;'><input type='text' id='data_" + sheetName + "_" + CStr(j) + "' class='inputtxtbox'></td></tr>"
   Next
    
    For j = 0 To clearanceIndex
        clearanceHtml = clearanceHtml + "<div style='margin-left:2.5em'><ui>" + clearanceArray(j) + "</ui></div>"
    Next
    For j = 0 To safetyIndex
        safetyHtml = safetyHtml + "<div style='margin-left:1.5em'><ui>" + safetyArray(j) + "</ui></div>"
    Next
    
    If (toolsHtml <> Empty) Then
        htmlRow = Replace(htmlRow, "#Tools#", toolsHtml)
    End If
    If (partsHtml <> Empty) Then
        htmlRow = Replace(htmlRow, "#Parts#", partsHtml)
    End If
    If (abbreviationsHtml <> Empty) Then
        htmlRow = Replace(htmlRow, "#Abbreviations#", abbreviationsHtml)
    End If
    If (dataHtml <> Empty) Then
        htmlRow = Replace(htmlRow, "#DataContent#", dataHtml)
    End If
    If (clearanceHtml <> Empty) Then
        htmlRow = Replace(htmlRow, "#Clearance#", clearanceHtml)
    End If
     If (safetyHtml <> Empty) Then
        htmlRow = Replace(htmlRow, "#Safety#", safetyHtml)
    End If
    
    'Pre-reqequisite, action performed need to be removed if not required:
    
    If (InStr(htmlRow, "#ActionPerformed#") > 0) Then
        htmlRow = Replace(htmlRow, "<div class='completiontd'><b>ACTION PERFORMED CODE: </b>#ActionPerformed#</div>", "")
    End If
    
    If (InStr(htmlRow, "#Safety#") > 0) Then
        htmlRow = Replace(htmlRow, "<div class='completiontd'><b>SAFETY: </b>#Safety#</div>", "")
    End If
    
    If ((InStr(htmlRow, "#Tools#") > 0) And (InStr(htmlRow, "#Parts#") > 0) And (InStr(htmlRow, "#Abbreviations#") > 0) And (InStr(htmlRow, "#Clearance#") > 0)) Then
        htmlRow = Replace(htmlRow, "<div class='completiontd'><b>PREREQUISITES: </b></div><div class='completiontd'><table border=0 class='prerequisite'><tr><td><b>ABBREVIATIONS:</b>#Abbreviations#</td></tr><tr></tr><tr></tr><tr></tr><tr><td><b>TOOLS: </b>#Tools#</td></tr><tr></tr><tr></tr><tr></tr><tr><td><b>PARTS: </b>#Parts#</td></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr><td><b>CLEARANCES AND PERMITS: </b>#Clearance#</td></tr></table></div>", "")
    Else
        If (InStr(htmlRow, "#Tools#") > 0) Then
            htmlRow = Replace(htmlRow, "<tr><td><b>TOOLS: </b>#Tools#</td></tr><tr></tr><tr></tr><tr></tr>", "")
        End If
        If (InStr(htmlRow, "#Parts#") > 0) Then
            htmlRow = Replace(htmlRow, "<tr><td><b>PARTS: </b>#Parts#</td></tr><tr></tr><tr></tr><tr></tr><tr></tr>", "")
        End If
        If (InStr(htmlRow, "#Clearance#") > 0) Then
           htmlRow = Replace(htmlRow, "<tr><td><b>CLEARANCES AND PERMITS: </b>#Clearance#</td></tr>", "")
        End If
       If (InStr(htmlRow, "#Abbreviations#") > 0) Then
            htmlRow = Replace(htmlRow, "<tr><td><b>ABBREVIATIONS:</b>#Abbreviations#</td></tr><tr></tr><tr></tr><tr></tr>", "")
        End If
    End If
    
    htmlRow = Replace(htmlRow, "#ActionPerformed#", "")
    htmlRow = Replace(htmlRow, "#DataLabel#", "")
    htmlRow = Replace(htmlRow, "#Safety#", "")
    
    htmlTable = htmlRow + "</table>"
    
    If ((controlsheet.Cells(8, 2).Text) = Empty) Then
        controlsheet.Cells(8, 2).Value = "Local"
    End If
    
    If (LCase(controlsheet.Cells(8, 2).Text) = "prod") Then
        'htmlTable = htmlTable + "</form>"
        If (controlsheet.Cells(rownum, 4).Text <> Empty) Then
            If (controlsheet.Cells(rownum, 5).Text <> Empty) Then
                htmlStr = htmlTable + "<div id='var-setter' style='display:none'>window.localStorage.setItem('minmaxjson',JSON.stringify(" + controlsheet.Cells(rownum, 4).Value + "));window.localStorage.setItem('externalDefaultMinMax',JSON.stringify(" + controlsheet.Cells(rownum, 5).Value + "))</div>"
            Else
                htmlStr = htmlTable + "<div id='var-setter' style='display:none'>window.localStorage.setItem('minmaxjson',JSON.stringify(" + controlsheet.Cells(rownum, 4).Value + "));window.localStorage.setItem('externalDefaultMinMax','{}')</div>"
            End If
        
        Else
            If (controlsheet.Cells(rownum, 5).Text <> Empty) Then
                htmlStr = htmlTable + "<div id='var-setter' style='display:none'>window.localStorage.setItem('minmaxjson','{}');window.localStorage.setItem('externalDefaultMinMax',JSON.stringify(" + controlsheet.Cells(rownum, 5).Value + "))</div>"
            Else
                htmlStr = htmlTable + "<div id='var-setter' style='display:none'>window.localStorage.setItem('minmaxjson','{}');window.localStorage.setItem('externalDefaultMinMax','{}')</div>"
            End If
        
        End If
        htmlStr = htmlStr + "</form></body></html>"
    
    ElseIf (LCase(controlsheet.Cells(8, 2).Text) = "local") Then
        htmlTable = htmlTable + "</form>"
        If (controlsheet.Cells(rownum, 4).Text <> Empty) Then
            If (controlsheet.Cells(rownum, 5).Text <> Empty) Then
                htmlStr = htmlTable + "<script>var minmaxjson = " + controlsheet.Cells(rownum, 4).Value + ";var externalDefaultMinMax = " + controlsheet.Cells(rownum, 5).Value + ";</script></body></html>"
            Else
                htmlStr = htmlTable + "<script>var minmaxjson = " + controlsheet.Cells(rownum, 4).Value + ";var externalDefaultMinMax = {};</script></body></html>"
            End If
        
        Else
            If (controlsheet.Cells(rownum, 5).Text <> Empty) Then
                htmlStr = htmlTable + "<script>var minmaxjson = {};var externalDefaultMinMax = " + controlsheet.Cells(rownum, 5).Value + ";</script></body></html>"
            Else
                htmlStr = htmlTable + "<script>var minmaxjson = {};var externalDefaultMinMax = {};</script></body></html>"
            End If
        End If
    End If
    
    


End Sub

Private Function GetHTMLForSteps(sheetName As String, htmlRow As String, datasheet As Worksheet, i As Integer, WarningRangeMin As String, WarningRangeMax As String, ErrorRangeMin As String, ErrorRangeMax As String, checkBoxData As Variant, checkBoxIndex As Integer, chkBoxrows As Integer, dropDownData As Variant, dropDownIndex As Integer)
    Dim ID_List(0 To 500) As String
    Dim id_index As Integer
    
    Set controlsheet = ThisWorkbook.Worksheets("Control")
    
    id_index = -1
    'Steps of the form: 1,2,3:
    If datasheet.Cells(i, 10).Text = "Steps" Then
        
            If prevStepString <> datasheet.Cells(i, 3).Text And datasheet.Cells(i - 1, 10).Text <> "Header" Then
                htmlRow = htmlRow + "</div></div></div>"
            Else
                  htmlRow = htmlRow + "</div></div></div>"
            End If
        
            prevStepString = datasheet.Cells(i, 3).Text
            
            If (controlsheet.Cells(7, 2).Text = "MO") Then ' Blue ribbon
                If (LCase(datasheet.Cells(i, 7).Text) = "hidden") Then
                   htmlRow = htmlRow + "<div class='panel panel-default hidden'><div class='collapsible' role='tab' id='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='background:rgb(53, 152, 220);height:40px'><h4 class='panel-title'>"
                   If (datasheet.Cells(i - 1, 10).Text = "HeaderRibbon") Then
                    htmlRow = htmlRow + "<a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + "&nbsp;&nbsp;&nbsp;" + datasheet.Cells(i - 1, 6).Text + "</a>"
                   Else
                    htmlRow = htmlRow + "<a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + "</a>"
                   End If
                    htmlRow = htmlRow + "</h4></div><div  id='collapse_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='panel-collapse collapse ' role='tabpanel' aria-labelledby='heading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'><div class='panel-body content'>" + _
                    "<div class='Steps formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'><table border=0 style = table-layout: fixed;><tr style='height:2px;'><td class= 'completiontd'  width=10%>"
                
                Else
                
                    htmlRow = htmlRow + "<div class='panel panel-default' ><div class='collapsible' role='tab' id='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='background:rgb(53, 152, 220);height:40px'><h4 class='panel-title'>"
 
                If (datasheet.Cells(i - 1, 10).Text = "HeaderRibbon") Then
                    htmlRow = htmlRow + "<a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + "&nbsp;&nbsp;&nbsp;" + datasheet.Cells(i - 1, 6).Text + "</a>"
                 Else ' header inside blue ribbon
                    htmlRow = htmlRow + "<a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + "</a>"
                 End If
                    htmlRow = htmlRow + "</h4></div><div  id='collapse_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='panel-collapse collapse ' role='tabpanel' aria-labelledby='heading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'><div class='panel-body content'>" + _
                    "<div class='Steps formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'><table border=0 style = table-layout: fixed;><tr style='height:2px;'><td class= 'completiontd'  width=10%>"
                End If
                
             Else ' for IL forms
               If (LCase(datasheet.Cells(i, 7).Text) = "hidden") Then
                htmlRow = htmlRow + "<div class='panel panel-default hidden'><div class='collapsible' role='tab' id='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='background:rgb(53, 152, 220);height:40px'><h4 class='panel-title'>"
                 If (datasheet.Cells(i - 1, 10).Text <> "Header") Then
                    htmlRow = htmlRow + "<a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + "</a>"
                 Else ' header inside blue ribbon
                    htmlRow = htmlRow + "<a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + "&nbsp;&nbsp;&nbsp;" + datasheet.Cells(i - 1, 6).Text + "</a>"
                 End If
                    htmlRow = htmlRow + "</h4></div><div  id='collapse_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='panel-collapse collapse ' role='tabpanel' aria-labelledby='heading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'><div class='panel-body content'>" + _
                    "<div class='Steps formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'><table border=0 style = table-layout: fixed;><tr style='height:2px;'><td class= 'completiontd'  width=10%>"
                Else
                    
                    htmlRow = htmlRow + "<div class='panel panel-default' ><div class='collapsible' role='tab' id='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='background:rgb(53, 152, 220);height:40px'><h4 class='panel-title'>"
                    If (datasheet.Cells(i - 1, 10).Text <> "Header") Then
                   
                    htmlRow = htmlRow + "<a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + "</a>"
                    Else ' header inside blue ribbon
                   
                     htmlRow = htmlRow + "<a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + "&nbsp;&nbsp;&nbsp;" + datasheet.Cells(i - 1, 6).Text + "</a>"
                    End If
                    htmlRow = htmlRow + "</h4></div><div  id='collapse_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='panel-collapse collapse ' role='tabpanel' aria-labelledby='heading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'><div class='panel-body content'>" + _
                    "<div class='Steps formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'><table border=0 style = table-layout: fixed;><tr style='height:2px;'><td class= 'completiontd'  width=10%>"
                End If
                
            End If
            
            
            If (LCase(datasheet.Cells(i, 13).Text) <> "dropdown" And LCase(datasheet.Cells(i, 13).Text) <> "textbox") Then
                
                If (controlsheet.Cells(7, 2).Text = "MO") Then
                   If (LCase(datasheet.Cells(i, 1).Text) <> "textbox") Then
                    htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)'/><span class='checkmark'></span></label>"
                   Else
                    htmlRow = htmlRow + "<div><input type='text' class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z0-9]{2,}' id='Initials_" + sheetName + "_" + CStr(i) + "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                  End If
                Else
                     If (LCase(datasheet.Cells(i, 1).Text) <> "checkbox") Then
                        htmlRow = htmlRow + "<div><input type='text' class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z0-9]{2,}' id='Initials_" + sheetName + "_" + CStr(i) + "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                     Else
                        htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)'/><span class='checkmark'></span></label>"
                   End If
                End If
                htmlRow = htmlRow + "" + _
                "</div></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd' width='50%' ><div id='stepDesc_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='stepDesc' style='color: rgb(2, 113, 182)'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</div></td><td></td></tr></table></div>"
                    
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":Initials_" + sheetName + "_" + CStr(i)
                'id_index = id_index + 1
                'ID_List(id_index) = datasheet.Cells(i, 17).Text + ":OverrideInitials_" + sheetname + "_" + CStr(i)
                
             ElseIf (LCase(datasheet.Cells(i, 13).Text) = "dropdown" And datasheet.Cells(i, 16).Text <> Empty) Then
            
               ' htmlRow = htmlRow + "<div class='panel panel-default'><div class='collapsible' role='tab' id='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='background:rgb(53, 152, 220);height:40px'><h4 class='panel-title'><a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + _
               ' "</a></h4></div><div  id='collapse_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='panel-collapse collapse ' role='tabpanel' aria-labelledby='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'><div class='panel-body content'>" + _
               ' "<div class=  'Steps formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'><table border=0 style = table-layout: fixed;>" + "<tr><td class= 'completiontd'  width=10%>"
                 If (controlsheet.Cells(7, 2).Text = "MO") Then
                    If (LCase(datasheet.Cells(i, 1).Text) <> "textbox") Then
                         htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)' /><span class='checkmark'></span></label>"
                    Else
                          htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                            "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                    End If
                Else
                    If (LCase(datasheet.Cells(i, 1).Text) <> "checkbox") Then
                        htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                            "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                    Else
                        htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)' /><span class='checkmark'></span></label>"
                    End If
                End If
                 htmlRow = htmlRow + "<br><br>" + _
                "</div> </td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd' width='50%'><div id='stepDesc_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='stepDesc' style='color: rgb(2, 113, 182)'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</div></td><td class= 'completiontd'><div>"
               
                    htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' style='width: 100%;margin-left:-15%;'"
                
                htmlRow = htmlRow + "id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + "," + datasheet.Cells(i, 16).Text + ",""" + sheetName + """," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")' > <option value='Select' selected>Select</option>"
                For a = 0 To dropDownIndex
                    htmlRow = htmlRow + "<option value='" + LTrim(RTrim(dropDownData(a))) + "'>" + LTrim(RTrim(dropDownData(a))) + "</option>"
                Next
                '"<option value='" + DataSheet.Cells(i, 14).Text + "'>" + DataSheet.Cells(i, 14).Text + "</option><option value='" + DataSheet.Cells(i, 15).Text + "'>" + DataSheet.Cells(i, 15).Text + "</option><option value='" + DataSheet.Cells(i, 16).Text + "'>" + DataSheet.Cells(i, 16).Text + "</option>"
                htmlRow = htmlRow + "</select></div></td>"
                 If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                    htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div>" + _
                     "</td><td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div></td>"
                    Else
                     htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                 End If
                Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                End If
                htmlRow = htmlRow + "</tr></table></div>"
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                'id_index = id_index + 1
                'ID_List(id_index) = datasheet.Cells(i, 17).Text + ":OverrideInitials_" + sheetname + "_" + CStr(i)
                
             ElseIf (LCase(datasheet.Cells(i, 13).Text) = "dropdown" And datasheet.Cells(i, 16).Text = Empty And datasheet.Cells(i, 8).Text <> Empty) Then
            
               ' htmlRow = htmlRow + "<div class='panel panel-default'><div class='collapsible' role='tab' id='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='background:rgb(53, 152, 220);height:40px'><h4 class='panel-title'><a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + _
               ' "</a></h4></div><div  id='collapse_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='panel-collapse collapse ' role='tabpanel' aria-labelledby='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'><div class='panel-body content'>" + _
               ' "<div class=  'Steps formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'><table border=0 style = table-layout: fixed;>" + "<tr><td class= 'completiontd'  width=10%>"
                 If (controlsheet.Cells(7, 2).Text = "MO") Then
                    If (LCase(datasheet.Cells(i, 1).Text) <> "textbox") Then
                         htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)' /><span class='checkmark'></span></label>"
                    Else
                          htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                            "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                    End If
                Else
                    If (LCase(datasheet.Cells(i, 1).Text) <> "checkbox") Then
                        htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                            "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                    Else
                        htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)' /><span class='checkmark'></span></label>"
                    End If
                End If
                 htmlRow = htmlRow + "<br><br>" + _
                "</div> </td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd' width='50%'><div id='stepDesc_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='stepDesc' style='color: rgb(2, 113, 182)'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</div></td><td class= 'completiontd'><div>"
               
                    htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' style='width: 100%;margin-left:-15%;'"
                
                htmlRow = htmlRow + "id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + "," + """"",""" + sheetName + """," + datasheet.Cells(i, 8).Text + "," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")' > <option value='Select' selected>Select</option>"
                For a = 0 To dropDownIndex
                    htmlRow = htmlRow + "<option value='" + LTrim(RTrim(dropDownData(a))) + "'>" + LTrim(RTrim(dropDownData(a))) + "</option>"
                Next
                '"<option value='" + DataSheet.Cells(i, 14).Text + "'>" + DataSheet.Cells(i, 14).Text + "</option><option value='" + DataSheet.Cells(i, 15).Text + "'>" + DataSheet.Cells(i, 15).Text + "</option><option value='" + DataSheet.Cells(i, 16).Text + "'>" + DataSheet.Cells(i, 16).Text + "</option>"
                htmlRow = htmlRow + "</select></div></td>"
                 If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                    htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div>" + _
                     "</td><td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div></td>"
                    Else
                     htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                 End If
                Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                End If
                htmlRow = htmlRow + "</tr></table></div>"
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                'id_index = id_index + 1
                'ID_List(id_index) = datasheet.Cells(i, 17).Text + ":OverrideInitials_" + sheetname + "_" + CStr(i)
                    
                
            ElseIf (LCase(datasheet.Cells(i, 13).Text) = "dropdown" And datasheet.Cells(i, 31).Text <> Empty) Then
             '   htmlRow = htmlRow + "<div class='panel panel-default'><div class='collapsible' role='tab' id='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='background:rgb(53, 152, 220);height:40px'><h4 class='panel-title'><a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + _
             '   "</a></h4></div><div  id='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='panel-collapse collapse ' role='tabpanel' aria-labelledby='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'><div class='panel-body content'>" + _
             '   "<div class=  'Steps formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'><table border=0 style = table-layout: fixed;>" + "<tr><td class= 'completiontd'  width=10%>"
                
               If (controlsheet.Cells(7, 2).Text = "MO") Then
                    If (LCase(datasheet.Cells(i, 1).Text) <> "textbox") Then
                        htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)'/><span class='checkmark'></span></label>"
                    Else
                        htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                        "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                    End If
                Else
                    If (LCase(datasheet.Cells(i, 1).Text) <> "checkbox") Then
                     htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                    "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                    Else
                         htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)'/><span class='checkmark'></span></label>"
                    End If
                End If
                
                htmlRow = htmlRow + "" + _
                "</div> </td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd' width='50%'><div id='stepDesc_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='stepDesc' style='color: rgb(2, 113, 182)'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</div></td><td class= 'completiontd'><div>"
                'If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                    'htmlRow = htmlRow + "<select class='optional' style='width: 70%;margin-left:-4%;'"
                'Else
                    htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' style='width: 100%;margin-left:-15%;'"
                'End If
                htmlRow = htmlRow + "id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id," + datasheet.Cells(i, 31).Text + ")""><option value='Select' selected>Select</option>"
                For a = 0 To dropDownIndex
                    htmlRow = htmlRow + "<option value='" + LTrim(RTrim(dropDownData(a))) + "'>" + LTrim(RTrim(dropDownData(a))) + "</option>"
                Next
                '"<option value='" + DataSheet.Cells(i, 14).Text + "'>" + DataSheet.Cells(i, 14).Text + "</option><option value='" + DataSheet.Cells(i, 15).Text + "'>" + DataSheet.Cells(i, 15).Text + "</option><option value='" + DataSheet.Cells(i, 16).Text + "'>" + DataSheet.Cells(i, 16).Text + "</option>"
                htmlRow = htmlRow + "</select></div></td>"
                
                 If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                    htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div>" + _
                     "</td><td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div></td>"
                    Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                 End If
                Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                End If
                htmlRow = htmlRow + "</tr></table></div>"
                
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                'id_index = id_index + 1
                'ID_List(id_index) = datasheet.Cells(i, 17).Text + ":OverrideInitials_" + sheetname + "_" + CStr(i)
                
            ElseIf (LCase(datasheet.Cells(i, 13).Text) = "dropdown") Then
             '   htmlRow = htmlRow + "<div class='panel panel-default'><div class='collapsible' role='tab' id='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='background:rgb(53, 152, 220);height:40px'><h4 class='panel-title'><a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + _
             '   "</a></h4></div><div  id='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='panel-collapse collapse ' role='tabpanel' aria-labelledby='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'><div class='panel-body content'>" + _
             '   "<div class=  'Steps formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'><table border=0 style = table-layout: fixed;>" + "<tr><td class= 'completiontd'  width=10%>"
               If (controlsheet.Cells(7, 2).Text = "MO") Then
                    If (LCase(datasheet.Cells(i, 1).Text) <> "textbox") Then
                        htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)' /><span class='checkmark'></span></label>"
                    Else
                        htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                        "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                     End If
                Else
                    If (LCase(datasheet.Cells(i, 1).Text) <> "checkbox") Then
                         htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                        "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                    Else
                         htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)' /><span class='checkmark'></span></label>"
                   End If
                End If
                
                htmlRow = htmlRow + "" + _
                "</div> </td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd' width='50%'><div id='stepDesc_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='stepDesc' style='color: rgb(2, 113, 182)'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</div></td><td class= 'completiontd'><div>"
                'If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                    'htmlRow = htmlRow + "<select class='optional' style='width: 70%;margin-left:-4%;'"
                'Else
                    htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' style='width: 100%;margin-left:-15%;'"
                'End If
                htmlRow = htmlRow + "id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id)""><option value='Select' selected>Select</option>"
                For a = 0 To dropDownIndex
                    htmlRow = htmlRow + "<option value='" + LTrim(RTrim(dropDownData(a))) + "'>" + LTrim(RTrim(dropDownData(a))) + "</option>"
                Next
                '"<option value='" + DataSheet.Cells(i, 14).Text + "'>" + DataSheet.Cells(i, 14).Text + "</option><option value='" + DataSheet.Cells(i, 15).Text + "'>" + DataSheet.Cells(i, 15).Text + "</option><option value='" + DataSheet.Cells(i, 16).Text + "'>" + DataSheet.Cells(i, 16).Text + "</option>"
                htmlRow = htmlRow + "</select></div></td>"
                ' === If MeterID id present
                If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                    htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div>" + _
                     "</td><td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div></td>"
                    Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                 End If
                Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                End If
                htmlRow = htmlRow + "</tr></table></div>"
                
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                'id_index = id_index + 1
                'ID_List(id_index) = datasheet.Cells(i, 17).Text + ":OverrideInitials_" + sheetname + "_" + CStr(i)
                
                ' // 10_Jul_2019 : Steps with textBox
                
                ElseIf (LCase(datasheet.Cells(i, 13).Text) = "textbox") Then
             '   htmlRow = htmlRow + "<div class='panel panel-default'><div class='collapsible' role='tab' id='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='background:rgb(53, 152, 220);height:40px'><h4 class='panel-title'><a class='collapsed' role='button' data-toggle='collapse' data-parent='#accordion' href='#collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' aria-expanded='false' aria-controls='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'>" + datasheet.Cells(i, 17).Text + _
             '   "</a></h4></div><div  id='collapse" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='panel-collapse collapse ' role='tabpanel' aria-labelledby='heading" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'><div class='panel-body content'>" + _
             '   "<div class=  'Steps formData' lineno =" + datasheet.Cells(i, 2).Text + " stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'><table border=0 style = table-layout: fixed;>" + "<tr><td class= 'completiontd'  width=10%>"
               If (controlsheet.Cells(7, 2).Text = "MO") Then
                    If (LCase(datasheet.Cells(i, 1).Text) <> "textbox") Then
                        htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)' /><span class='checkmark'></span></label>"
                    Else
                        htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                        "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                     End If
                Else
                    If (LCase(datasheet.Cells(i, 1).Text) <> "checkbox") Then
                         htmlRow = htmlRow + "<div><input type= text class= 'initials-box' style='color: white;font-weight: bold;' required pattern='[A-Za-z]{2}' id='Initials_" + sheetName + "_" + CStr(i) + _
                        "' minlength=2 title='2 characters minimum'  onblur='validateInitial(id)' value='' />"
                    Else
                         htmlRow = htmlRow + "<div><label class='container'><input type='checkbox' id='Initials_" + sheetName + "_" + CStr(i) + "' value='' onclick='initialsCheckBoxClicked(id)' /><span class='checkmark'></span></label>"
                   End If
                End If
                
                htmlRow = htmlRow + "" + _
                "</div> </td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd' width='50%'><div id='stepDesc_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' class='stepDesc' style='color: rgb(2, 113, 182)'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</div></td><td class= 'completiontd'><div>"
                
                htmlRow = htmlRow + "<input style='width: 140%; margin-left: -50%' id='subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' ></div></td>"
               
                ' === If MeterID id present
                If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                    htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div>" + _
                     "</td><td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div></td>"
                    Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                 End If
                Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                End If
                htmlRow = htmlRow + "</tr></table></div>"
                
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                'id_index = id_index + 1
            
            End If
            End If
            GetHTMLForSteps = htmlRow
    
End Function


Private Function GetHTMLForTypes(sheetName As String, htmlRow As String, datasheet As Worksheet, i As Integer, WarningRangeMin As String, WarningRangeMax As String, ErrorRangeMin As String, ErrorRangeMax As String, checkBoxData As Variant, checkBoxIndex As Integer, chkBoxrows As Integer, dropDownData As Variant, dropDownIndex As Integer)
    Dim ID_List(0 To 500) As String
    Dim id_index As Integer
    
    Set controlsheet = ThisWorkbook.Worksheets("Control")
    
    id_index = -1
        'Substeps of the form 1.a that may or may not have an input associated:
        If datasheet.Cells(i, 10).Text = "Substeps" Then
            If (LCase(datasheet.Cells(i, 7).Text) = "hidden") Then
            htmlRow = htmlRow + "<div class= 'Substeps formData hidden' lineno =" + datasheet.Cells(i, 2).Text + "  stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'>"
            Else
            htmlRow = htmlRow + "<div class= 'Substeps formData' lineno =" + datasheet.Cells(i, 2).Text + "  stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'>"
            End If
            If (datasheet.Cells(i, 13).Text = Empty) Then
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)' >" + datasheet.Cells(i, 17).Text + "</div></td><td class='completiontd'  class='description'><label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd'  class='status'></td></tr></table></div>"
            ElseIf (LCase(datasheet.Cells(i, 13).Text) = "textbox") Then 'Here
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)' >" + datasheet.Cells(i, 17).Text + "</div></td><td class='completiontd'  class='description' width='50%'><label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd'  class='meterReading'>"
                If (datasheet.Cells(i, 11).Text <> Empty) Then
                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                        htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width: 150%;margin-left:-50%;' id='subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></td>"
                    Else
                        htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width: 150%;margin-left:-50%;' id='subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></td>"
                    End If
                Else
                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                        htmlRow = htmlRow + "<input class='optional' type='text' name='' value='' style='width: 150%;margin-left:-50%;' id='subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></td>"
                    Else
                        htmlRow = htmlRow + "<input type='text' name='' value='' style='width: 150%;margin-left:-50%;' id='subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></td>"
                    End If
                End If
                If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                        htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2017</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' style='width:100%' type='text' name='' value='' disabled/></div></td>" + _
                        "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2017</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' style='width:100%' type='text' name='' value='' disabled/></div></td></td></tr></table></div>"
                    Else
                        htmlRow = htmlRow + " <td class='completiontd'></td><td class='completiontd'></td></td></tr></table></div>"
                    End If
                Else
                    htmlRow = htmlRow + " <td class='completiontd'></td><td class='completiontd'></td></td></tr></table></div>"
                End If
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                
            ElseIf (LCase(datasheet.Cells(i, 13).Text) = "date") Then
            
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)' >" + datasheet.Cells(i, 17).Text + "</div></td><td class='completiontd'  class='description' width='50%'> " + _
                "<label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class='completiontd'>"
                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                    htmlRow = htmlRow + "<input class='optional' style='width:150%;margin-left:-50%'  type='date' name='' value='' id='subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></td>"
                Else
                    htmlRow = htmlRow + "<input style='width:150%;margin-left:-50%'  type='date' name='' value='' id='subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></td>"
                End If
                If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                        htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2017</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' style='width:100%' type='text' name='' value='' disabled/></div></td>" + _
                        "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2017</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' style='width:100%' type='text' name='' value='' disabled/></div></td></tr></table></div>"
                    Else
                        htmlRow = htmlRow + " <td class='completiontd'></td><td class='completiontd'></td></tr></table></div>"
                    End If
                Else
                    htmlRow = htmlRow + " <td class='completiontd'></td><td class='completiontd'></td></tr></table></div>"
                End If
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
            
            ElseIf (datasheet.Cells(i, 13).Text = "Checkbox") Then
                
                
                htmlRow = htmlRow + "<table border='0' style='table-layout:fixed;'><tbody><tr><td class='completiontd' width='10%'></td><td class='completiontd' width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class='completiontd'>" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</td><td class='completiontd'><label class='completionLabel'></label></td><td class='completiontd'><label class='switch'><input style='margin-left:-0.5%;' type='checkbox' id='subchkboxID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'><span class='slider round'></span></label></td>" + _
                "</tr></tbody></table></div>"
                
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":subchkboxID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
            
            ElseIf (datasheet.Cells(i, 13).Text = "CheckBox") Then
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)' >" + datasheet.Cells(i, 17).Text + "</div></td><td class='completiontd'  class='description'><label class='checkbox-label'><input type='checkbox' class='completionLabel' id='subchkboxID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "</label></td><td class= 'completiontd'  class='status'></td><td class= 'completiontd'></td></tr></table></div>"
                
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":subchkboxID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
          
            ElseIf (datasheet.Cells(i, 13).Text = "CheckBoxList") Then 'Here
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)' >" + datasheet.Cells(i, 17).Text + "</div></td><td class='completiontd'  class='description'><label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd'  class='status'></td><td class= 'completiontd'>"
                htmlRow = htmlRow + "<label class='checkbox-label'><input style='margin-left:-0.5%' type='checkbox' id='chkBxlistInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_0" + "'/> " + checkBoxData(0) + "</label><label class='checkbox-label'><input type='checkbox' id='chkBxlistInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_1" + "'/> " + checkBoxData(1) + "</label></td></tr>"
                
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":chkBxlistInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_0"
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":chkBxlistInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_1"
                
             Dim chkbxvalues As Integer
             chkbxvalues = 2
             For j = 1 To chkBoxrows
                  htmlRow = htmlRow + " <tr><td class='completiontd' width='10%'></td><td class='completiontd' width='6%'><div class='stepID'></div></td><td class='completiontd' class='description'><label class='completionLabel'></label></td><td class='completiontd' class='status'><label class='completionLabel'> </label></td><td class='completiontd'>"
                  For a = chkbxvalues To checkBoxIndex
                    If (a Mod 2 = 0) Then
                        htmlRow = htmlRow + "<label class='checkbox-label'><input style='margin-left:-0.5%' type='checkbox' id='chkBxlistInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(a) + "' /> " + checkBoxData(a) + "</label>"
                    Else
                        htmlRow = htmlRow + "<label class='checkbox-label'><input type='checkbox' id='chkBxlistInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(a) + "' /> " + checkBoxData(a) + "</label>"
                    End If
                    id_index = id_index + 1
                    ID_List(id_index) = datasheet.Cells(i, 17).Text + ":chkBxlistInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(a)
                    
                    chkbxvalues = chkbxvalues + 1
                    If (a Mod 2 = 1) Then
                     Exit For
                    End If
                    
                  Next
                  htmlRow = htmlRow + "</td></tr>"
                  ' htmlRow = htmlRow + "<input type='checkbox' id='chkBxlistInput_" + sheetname + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/> " + checkBoxData(a) + " <input type='checkbox' id='chkBxlistInput_" + sheetname + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/> " + checkBoxData(a + 1) + "</td></tr>"
                  Next
                 htmlRow = htmlRow + "</table></div>"
             
             ElseIf (LCase(datasheet.Cells(i, 13).Text) = "dropdown" And datasheet.Cells(i, 16).Text = Empty And datasheet.Cells(i, 8).Text <> Empty) Then
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + _
               datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd'  class='description' width='50%'>" + _
                "<label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd' >"
                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' onkeyup='" + datasheet.Cells(i, 11).Text + "' class='optional' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + "," + ","""",""" + sheetName + """," + datasheet.Cells(i, 8).Text + "," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")'><option value='Select' selected>Select</option>"
                    Else
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' class='optional' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + "," + ","""",""" + sheetName + """," + datasheet.Cells(i, 8).Text + "," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")'><option value='Select' selected>Select</option>"
                    End If
                Else
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + ","""",""" + sheetName + """," + datasheet.Cells(i, 8).Text + "," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")'><option value='Select' selected>Select</option>"
                    Else
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + ","""",""" + sheetName + """," + datasheet.Cells(i, 8).Text + "," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")'><option value='Select' selected>Select</option>"
                    End If
                End If
                For a = 0 To dropDownIndex
                    htmlRow = htmlRow + "<option value='" + LTrim(RTrim(dropDownData(a))) + "'>" + LTrim(RTrim(dropDownData(a))) + "</option>"
                Next
                htmlRow = htmlRow + "</select></td>"
                 If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                     htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div>" + _
                     "</td><td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div></td>"
                     Else
                     htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                    End If
                Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                End If
                htmlRow = htmlRow + "</tr></table></div>"
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                
                 ' Disabled / Conditionaly hide Steps
                 ElseIf (LCase(datasheet.Cells(i, 13).Text) = "dropdown" And (datasheet.Cells(i, 16).Text <> Empty Or datasheet.Cells(i, 27).Text <> Empty)) Then
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + _
               datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd'  class='description' width='50%'>" + _
                "<label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td></td><td class= 'completiontd' >"
                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + "," + datasheet.Cells(i, 16).Text + ",""" + sheetName + """," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")'><option value='Select' selected>Select</option>"
                    Else
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' class='optional' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + "," + datasheet.Cells(i, 16).Text + ",""" + sheetName + """," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")'><option value='Select' selected>Select</option>"
                    End If
                Else
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + "," + datasheet.Cells(i, 16).Text + ",""" + sheetName + """," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")'><option value='Select' selected>Select</option>"
                    Else
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='cmbselectionChanged(this.value," + datasheet.Cells(i, 15).Text + "," + datasheet.Cells(i, 16).Text + ",""" + sheetName + """," + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ")'><option value='Select' selected>Select</option>"
                    End If
                End If
                For a = 0 To dropDownIndex
                    htmlRow = htmlRow + "<option value='" + LTrim(RTrim(dropDownData(a))) + "'>" + LTrim(RTrim(dropDownData(a))) + "</option>"
                Next
                htmlRow = htmlRow + "</select></td>"
                 If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                     htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div>" + _
                     "</td><td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div></td>"
                     Else
                     htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                    End If
                Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                End If
                htmlRow = htmlRow + "</tr></table></div>"
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                
                
            
            ElseIf (LCase(datasheet.Cells(i, 13).Text) = "dropdown" And datasheet.Cells(i, 31).Text <> Empty) Then
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + _
               datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd'  class='description' width='50%'>" + _
                "<label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td></td><td class= 'completiontd' >"
                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' onkeyup='" + datasheet.Cells(i, 11).Text + "' class='optional' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id," + datasheet.Cells(i, 31).Text + ")""><option value='Select' selected>Select</option>"
                    Else
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' class='optional' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id," + datasheet.Cells(i, 31).Text + ")""><option value='Select' selected>Select</option>"
                    End If
                Else
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id," + datasheet.Cells(i, 31).Text + ")""><option value='Select' selected>Select</option>"
                    Else
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id," + datasheet.Cells(i, 31).Text + ")""><option value='Select' selected>Select</option>"
                    End If
                End If
                For a = 0 To dropDownIndex
                    htmlRow = htmlRow + "<option value='" + LTrim(RTrim(dropDownData(a))) + "'>" + LTrim(RTrim(dropDownData(a))) + "</option>"
                Next
                htmlRow = htmlRow + "</select></td>"
                  If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                     htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i + 100) + "'/></div>" + _
                     "</td><td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div></td>"
                     Else
                     htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                    End If
                Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                End If
                htmlRow = htmlRow + "</tr></table></div>"
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                
            ElseIf (LCase(datasheet.Cells(i, 13).Text) = "dropdown") Then
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + _
                datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd'  class='description' width='50%'>" + _
                "<label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd' >"
                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' onkeyup='" + datasheet.Cells(i, 11).Text + "' class='optional' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id)""><option value='Select' selected>Select</option>"
                    Else
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' class='optional' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id)""><option value='Select' selected>Select</option>"
                    End If
                Else
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id)""><option value='Select' selected>Select</option>"
                    Else
                        htmlRow = htmlRow + "<select validation='" + datasheet.Cells(i, 30).Text + "' style='width: 100%;margin-left:-15%;' id='selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange=""selectionChanged(id)""><option value='Select' selected>Select</option>"
                    End If
                End If
                For a = 0 To dropDownIndex
                    htmlRow = htmlRow + "<option value='" + LTrim(RTrim(dropDownData(a))) + "'>" + LTrim(RTrim(dropDownData(a))) + "</option>"
                Next
                htmlRow = htmlRow + "</select></td>"
                  If (datasheet.Cells(i, 4).Text <> Empty) Then
                    If (InStr(1, UCase(datasheet.Cells(i, 4).Text), "XLOCAL") = 0) Then
                     htmlRow = htmlRow + "<td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div>" + _
                     "</td><td class='completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input style='width:100%' type='text' name='' value='' disabled id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/></div></td>"
                     Else
                     htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                    End If
                Else
                    htmlRow = htmlRow + "<td class='completiontd'></td><td class='completiontd'></td>"
                End If
                htmlRow = htmlRow + "</tr></table></div>"
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":selectID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
            End If
        
        ElseIf datasheet.Cells(i, 10).Text = "ReadingHeader" Then
            htmlRow = htmlRow + "<div class =  'ReadingHeader formData' lineno =" + datasheet.Cells(i, 2).Text + "  stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'> <table style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class =stepID style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd'  class=  description  ><label class='completionLabel'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd'  class=  status  ></td></tr></table></div>"
        
        'The below are comments that appear in italics:
        ElseIf datasheet.Cells(i, 10).Text = "Comments" Then
           
            htmlRow = htmlRow + "<div class =  'Comments formData' style=margin-left:17%; lineno =" + datasheet.Cells(i, 2).Text + "  stepNo=" + datasheet.Cells(i, 3).Text + "> <table>" + "<tr><td class= 'completiontd'  class=  description  ><label style='color: rgb(2,113,182)'> <i>" + Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "•", "&bull;"), "µ", "&mu;"), "—", "&mdash;") + " </i></label></td><td class= 'completiontd'  class='status'></td></tr></table></div>"
          
        'End If
        
        'The below are hidden comments that appear in italics red bold:
        ElseIf datasheet.Cells(i, 10).Text = "WarningComments" Then
            If (LCase(datasheet.Cells(i, 7).Text) = "hidden") Then
            htmlRow = htmlRow + "<div class =  'WarningComments formData hidden' style=margin-left:17%; lineno =" + datasheet.Cells(i, 2).Text + "  stepNo=" + datasheet.Cells(i, 3).Text + "> <table>" + "<tr><td class= 'completiontd'  class=  description  ><label id='WarningcommentsID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='color: red; font-weight: bold;'> <i>" + Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "•", "&bull;"), "µ", "&mu;"), "—", "&mdash;") + " </i></label></td><td class= 'completiontd'  class='status'></td></tr></table></div>"
            Else
            htmlRow = htmlRow + "<div class =  'WarningComments formData' style=margin-left:17%; lineno =" + datasheet.Cells(i, 2).Text + "  stepNo=" + datasheet.Cells(i, 3).Text + "> <table>" + "<tr><td class= 'completiontd'  class=  description  ><label id='WarningcommentsID_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "' style='color: red; font-weight: bold;'> <i>" + Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "•", "&bull;"), "µ", "&mu;"), "—", "&mdash;") + " </i></label></td><td class= 'completiontd'  class='status'></td></tr></table></div>"
           End If
        'End If
       
        
        ElseIf datasheet.Cells(i, 10).Text = "Image" Then
            If (controlsheet.Cells(8, 2).Text = Empty) Then
                controlsheet.Cells(8, 2).Value = "Local"
            End If
            If (controlsheet.Cells(8, 2).Text <> Empty And LCase(controlsheet.Cells(8, 2).Text) = "prod") Then
                htmlRow = htmlRow + "<div class='completiontd'><img class='picture' id='Img_" + controlsheet.Cells(2, 2) + "_" + CStr(i) + "' src='/SO/api/Content/CompletionForms/" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "/'></div>"
            ElseIf (controlsheet.Cells(8, 2).Text <> Empty And LCase(controlsheet.Cells(8, 2).Text) = "local") Then
                htmlRow = htmlRow + "<div class='completiontd'><img class='picture' id='Img_" + controlsheet.Cells(2, 2) + "_" + CStr(i) + "' src='" + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + "'></div>"
            End If
            'htmlRow = htmlRow + "<div class='completiontd'><img class='picture' id='Img_" + controlsheet.Cells(2, 2) + "_" + CStr(i) + "' src='" + Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"),"‘","&lsquo;"),"’","&rsquo;") + "'></div>"
        'The below will have a box surrounding the text inside:
        ElseIf datasheet.Cells(i, 10).Text = "CommentBox" Then
        
            htmlRow = htmlRow + "<div class='custom-box' style='margin-left: 17%; margin-right: 42%'>" + _
            "<div class='completiontd' style='padding-bottom:0em;'>" + Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "•", "&bull;"), "µ", "&mu;"), "—", "&mdash;") + "</div></div>"
        
        'If the text-notes class is added in excel,
        ElseIf (datasheet.Cells(i, 10).Text = "Text-Notes") Then 'Here
            If (LCase(datasheet.Cells(i, 7).Text) = "hidden") Then
             htmlRow = htmlRow + "<div class='hidden'><table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)' >" + datasheet.Cells(i, 17).Text + "</div></td><td class='completiontd'  class='description'><label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd'  class='status'></td></tr>" + _
            "<tr><td class='completiontd' width='10%'></td><td class='completiontd' width='6%'></td><td><textarea style='width:80%;height:30%;' rows='5' cols='80' id='subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'></textarea></td></tr></table></div></div>"
            Else
             htmlRow = htmlRow + "<div><table border=0 style = table-layout: fixed;>" + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)' >" + datasheet.Cells(i, 17).Text + "</div></td><td class='completiontd'  class='description'><label class='completionLabel' id='subSteps_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd'  class='status'></td></tr>" + _
            "<tr><td class='completiontd' width='10%'></td><td class='completiontd' width='6%'></td><td><textarea style='width:80%;height:30%;' rows='5' cols='80' id='subInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'></textarea></td></tr></table></div></div>"
             End If
           
        ElseIf (datasheet.Cells(i, 10).Text = "Readings" Or datasheet.Cells(i, 10).Text = "ReadingsHistory") Then
            htmlRow = GetHTMLForTypes2(sheetName, htmlRow, datasheet, i, WarningRangeMin, WarningRangeMax, ErrorRangeMin, ErrorRangeMax, checkBoxData, checkBoxIndex, chkBoxrows, dropDownData, dropDownIndex)
        
        ' NERC Condition
        ElseIf (datasheet.Cells(i, 10).Text = "TestResults") Then
            htmlRow = htmlRow + "<div class='hidden'>" + " <div id='TestResults_" + datasheet.Cells(i, 5).Text + "'  lineno ='" + datasheet.Cells(i, 2).Text + "'  text ='" + datasheet.Cells(i, 6).Text + "' style='color: rgb(2, 113, 182)'>" + "[" + datasheet.Cells(i, 6).Text + "]" + "</div> </div>"
        End If
            
        
        GetHTMLForTypes = htmlRow
End Function
Private Function GetHTMLForTypes2(sheetName As String, htmlRow As String, datasheet As Worksheet, i As Integer, WarningRangeMin As String, WarningRangeMax As String, ErrorRangeMin As String, ErrorRangeMax As String, checkBoxData As Variant, checkBoxIndex As Integer, chkBoxrows As Integer, dropDownData As Variant, dropDownIndex As Integer)
    Dim ID_List(0 To 500) As String
    Dim id_index As Integer
    Set controlsheet = ThisWorkbook.Worksheets("Control")
    
    id_index = -1
        'The below are readings with a unit and without previous readings:
        If datasheet.Cells(i, 10).Text = "Readings" Then 'Here
             If (LCase(datasheet.Cells(i, 7).Text) = "hidden") Then
             htmlRow = htmlRow + "<div class=  'Readings formData hidden' lineno =" + datasheet.Cells(i, 2).Text + "  stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'>"
             Else
             htmlRow = htmlRow + "<div class=  'Readings formData' lineno =" + datasheet.Cells(i, 2).Text + "  stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'>"
             End If
            If datasheet.Cells(i, 9).Text = Empty Then ' Units
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;> " + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class='completiontd'  class='description'><label class='completionLabel' id='label_reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class='completiontd'  class='status'></td><td style='margin-left:-15%;'>"
                If (datasheet.Cells(i, 18).Text <> Empty Or datasheet.Cells(i, 19).Text <> Empty Or datasheet.Cells(i, 20).Text <> Empty Or datasheet.Cells(i, 21).Text <> Empty) Then
                   htmlRow = htmlRow + "<div class='tooltip'>"
                   If (datasheet.Cells(i, 27).Text <> Empty And datasheet.Cells(i, 28).Text <> Empty) Then ' Display Steps
                    If (datasheet.Cells(i, 13).Text = Empty) Then 'Type - Text/ number
                    If (datasheet.Cells(i, 11).Text <> Empty) Then  ' Calc function
                        If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        Else
                            htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        End If
                    Else
                        If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        Else
                            htmlRow = htmlRow + "<input type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        End If
                    End If
                   Else
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        Else
                            htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        End If
                    Else
                        If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        Else
                            htmlRow = htmlRow + "<input type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        End If
                    End If
                   End If
                   ' End if of Display steps
                   Else
                   If (datasheet.Cells(i, 13).Text = Empty) Then 'Type - Text/ number
                    If (datasheet.Cells(i, 11).Text <> Empty) Then  ' Calc function
                        If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        Else
                            htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        End If
                    Else
                        If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        Else
                            htmlRow = htmlRow + "<input type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        End If
                    End If
                   Else
                    If (datasheet.Cells(i, 11).Text <> Empty) Then
                        If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        Else
                            htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        End If
                    Else
                        If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        Else
                            htmlRow = htmlRow + "<input type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id, " + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                        End If
                    End If
                   End If
                  End If
                    htmlRow = htmlRow + "</div>"
                    id_index = id_index + 1
                    ID_List(id_index) = datasheet.Cells(i, 17).Text + ":readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                Else
                 If (datasheet.Cells(i, 27).Text <> Empty And datasheet.Cells(i, 28).Text <> Empty) Then
                    If (datasheet.Cells(i, 13).Text = Empty) Then
                        If (datasheet.Cells(i, 11).Text <> Empty) Then
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                            Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                            End If
                        Else
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)'/>"
                            Else
                                htmlRow = htmlRow + "<input type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)'/>"
                            End If
                        End If
                    Else
                        If (datasheet.Cells(i, 11).Text <> Empty) Then
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)'/>"
                            Else
                            htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)'/>"
                            End If
                        Else
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)'/>"
                            Else
                            htmlRow = htmlRow + "<input type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)'/>"
                            End If
                        End If
                    End If
                  Else
                    If (datasheet.Cells(i, 13).Text = Empty) Then
                        If (datasheet.Cells(i, 11).Text <> Empty) Then
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/>"
                            Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/>"
                            End If
                        Else
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/>"
                            Else
                                htmlRow = htmlRow + "<input type='number' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/>"
                            End If
                        End If
                    Else
                        If (datasheet.Cells(i, 11).Text <> Empty) Then
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/>"
                            Else
                            htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/>"
                            End If
                        Else
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            htmlRow = htmlRow + "<input class='optional' type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/>"
                            Else
                            htmlRow = htmlRow + "<input type='text' name='' value='' style='width:50%;border-color: rgb(2, 113, 182)' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'/>"
                            End If
                        End If
                    End If
                  End If
                    id_index = id_index + 1
                    ID_List(id_index) = datasheet.Cells(i, 17).Text + ":readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                    
                End If
                'htmlRow = htmlRow + "<label class='completionLabel' for=''  class='units' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 9).Text + "</label> </td></tr></table></div>"
                
                htmlRow = htmlRow + "</td><td style='font-family:Calibri, sans-serif; vertical-align: top;'><label class='units' style='color: rgb(2, 113, 182)'>" + Replace(datasheet.Cells(i, 9).Text, "ºC", "&#8451;") + "</label></td><td class= 'completiontd' style='padding-right: 0em;'>" + _
                "<div style='display:none;' class='popup' onclick=myFunction(" + CStr(i) + ")><span class='popuptext' id='myPopup" + CStr(i) + "'>12/12/2017</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' style='width:100%' type='text'   name=''  value=''  disabled/></div>" + _
                "</td><td class= 'completiontd' style='padding-right: 0em;'><div style='display:none;' class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'></span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i + 100) + "' style='width:100%' type='text' name='' value='' disabled/></div></td> </td></tr></table></div>"
               
            ElseIf datasheet.Cells(i, 9).Text <> Empty Then
                htmlRow = htmlRow + "<table style = table-layout: fixed;> " + "<tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd'  class='description'  width=50%><label class='completionLabel' id='label_reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd' style='margin-left:-15%;'>"
               
                If (datasheet.Cells(i, 18).Text <> Empty Or datasheet.Cells(i, 19).Text <> Empty Or datasheet.Cells(i, 20).Text <> Empty Or datasheet.Cells(i, 21).Text <> Empty) Then
                    htmlRow = htmlRow + "<div class='tooltip'>"
                    If (datasheet.Cells(i, 27).Text <> Empty And datasheet.Cells(i, 28).Text <> Empty) Then ' Display Steps
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                Else
                                    htmlRow = htmlRow + "<input style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                End If
                            End If
                        Else
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                Else
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                Else
                                    htmlRow = htmlRow + "<input style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                End If
                            End If
                        End If
                    Else
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                Else
                                    htmlRow = htmlRow + "<input style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                End If
                            End If
                        Else
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                Else
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                Else
                                    htmlRow = htmlRow + "<input style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                End If
                            End If
                        End If
                    End If
                    htmlRow = htmlRow + "</div>"
                    
                    id_index = id_index + 1
                    ID_List(id_index) = datasheet.Cells(i, 17).Text + ":readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                    
                Else
                  If (datasheet.Cells(i, 27).Text <> Empty And datasheet.Cells(i, 28).Text <> Empty) Then ' Display Steps
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                Else
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                Else
                                    htmlRow = htmlRow + "<input style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                End If
                            End If
                        Else
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'  />"
                                Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                Else
                                    htmlRow = htmlRow + "<input style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                End If
                            End If
                        End If
                    Else
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                Else
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                Else
                                    htmlRow = htmlRow + "<input style='width:100%' type='number' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                End If
                            End If
                        Else
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                Else
                                    htmlRow = htmlRow + "<input style='width:100%' type='text' name='' value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                End If
                            End If
                        End If
                    End If
                    id_index = id_index + 1
                    ID_List(id_index) = datasheet.Cells(i, 17).Text + ":readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                    
                End If
                
                htmlRow = htmlRow + "</td><td style='font-family:Calibri, sans-serif; vertical-align: top;'><label class='units' style='color: rgb(2, 113, 182)'>" + Replace(datasheet.Cells(i, 9).Text, "ºC", "&#8451;") + "</label></td><td class= 'completiontd' style='padding-right: 0em;'>" + _
                "<div style='display:none;' class='popup' onclick=myFunction(" + CStr(i) + ")><span class='popuptext' id='myPopup" + CStr(i) + "'>12/12/2017</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' style='width:100%' type='text'   name=''  value=''  disabled/></div>" + _
                "</td><td class= 'completiontd'><div style='display:none;' class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i + 100) + "' style='width:100%' type='text' name='' value='' disabled/></div></td></tr></table></div>"
            End If
            
            
        End If
        htmlRow = GetHTMLForReadingsHistory(sheetName, htmlRow, datasheet, i, WarningRangeMin, WarningRangeMax, ErrorRangeMin, ErrorRangeMax, checkBoxData, checkBoxIndex, chkBoxrows, dropDownData, dropDownIndex)
        GetHTMLForTypes2 = htmlRow
            
        
End Function
Private Function GetHTMLForReadingsHistory(sheetName As String, htmlRow As String, datasheet As Worksheet, i As Integer, WarningRangeMin As String, WarningRangeMax As String, ErrorRangeMin As String, ErrorRangeMax As String, checkBoxData As Variant, checkBoxIndex As Integer, chkBoxrows As Integer, dropDownData As Variant, dropDownIndex As Integer)
    Dim ID_List(0 To 500) As String
    Dim id_index As Integer
    Set controlsheet = ThisWorkbook.Worksheets("Control")
    
    id_index = -1


        'The below are readings with unit and with previous readings:
        If datasheet.Cells(i, 10).Text = "ReadingsHistory" Then 'Here
            
            If (LCase(datasheet.Cells(i, 7).Text) = "hidden") Then
                htmlRow = htmlRow + "<div class=  'ReadingsHistory formData hidden' lineno =" + datasheet.Cells(i, 2).Text + "  stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'>"
            Else
                htmlRow = htmlRow + "<div class=  'ReadingsHistory formData' lineno =" + datasheet.Cells(i, 2).Text + "  stepNo='" + datasheet.Cells(i, 3).Text + "' meterId='" + datasheet.Cells(i, 4).Text + "'>"
            End If
            
            If datasheet.Cells(i, 9).Text = Empty Then
                htmlRow = htmlRow + "<table border=0 style = table-layout: fixed;><tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd'  class='description' Width='50%'><label class='completionLabel' id='label_reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd'  class='status'></td><td class= 'completiontd'>"
                If (datasheet.Cells(i, 18).Text <> Empty Or datasheet.Cells(i, 19).Text <> Empty Or datasheet.Cells(i, 20).Text <> Empty Or datasheet.Cells(i, 21).Text <> Empty) Then
                   
                    If (datasheet.Cells(i, 27).Text <> Empty And datasheet.Cells(i, 28).Text) Then
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                             If (datasheet.Cells(i, 11).Text <> Empty) Then
                                 If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                     htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                 Else
                                 htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                 End If
                             Else
                                 If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                     htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                 Else
                                     htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)'  onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                 End If
                             End If
                         Else
                             If (datasheet.Cells(i, 11).Text <> Empty) Then
                                 If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                 
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                       htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                       htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                    End If
                                    
                                    
                                 Else
                                     If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                     htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)' />"
                                     Else
                                     htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                     End If
                                     
                                     
                                 End If
                             Else
                                 If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                     If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                     htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                     Else
                                     htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                     End If
                                     
                                 
                                     
                                 Else
                                     If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                     htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                     Else
                                     htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                     End If
                                     
                                 
                                 
                                     
                                 End If
                             End If
                         End If
                     Else
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                             If (datasheet.Cells(i, 11).Text <> Empty) Then
                                 If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                     htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                 Else
                                 htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                 End If
                             Else
                                 If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                     htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                 Else
                                     htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                 End If
                             End If
                         Else
                             If (datasheet.Cells(i, 11).Text <> Empty) Then
                                 If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                     htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)' />"
                                    Else
                                     htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                    End If
                                
                                
                                
                                 Else
                                 If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                 htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)' />"
                                 Else
                                 htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                 End If
                                 
                             End If
                             Else
                                 If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                     If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                     htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                     Else
                                     htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                     End If
                                     
                                 
                                     
                                 Else
                                     If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                     htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)' />"
                                     Else
                                     htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' />"
                                     End If
                                     
                                     
                                 End If
                             End If
                         End If
                     End If
                     
                Else
                    If (datasheet.Cells(i, 27).Text <> Empty And datasheet.Cells(i, 28).Text <> Empty) Then
                            If (datasheet.Cells(i, 13).Text = Empty) Then
                                If (datasheet.Cells(i, 11).Text <> Empty) Then
                                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                        htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                    Else
                                        htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                    End If
                                Else
                                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                        htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                    Else
                                        htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                    End If
                                End If
                            Else
                                If (datasheet.Cells(i, 11).Text <> Empty) Then
                                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                        If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                        htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onkeypress='return ValidateInput(id,event)'/>"
                                        Else
                                        htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                        End If
                                        
                                    
                                        
                                    Else
                                        If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                        htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onkeypress='return ValidateInput(id,event)' />"
                                        Else
                                        htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                        End If
                                        
                                        
                                    End If
                                Else
                                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                    htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                    End If
                                    
                                        
                                    Else
                                    
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onkeypress='return ValidateInput(id,event)' />"
                                    Else
                                    htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                    End If
                                    
                                        
                                    End If
                                End If
                            End If
                    Else
                      
                            If (datasheet.Cells(i, 13).Text = Empty) Then
                                If (datasheet.Cells(i, 11).Text <> Empty) Then
                                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                        htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' />"
                                    Else
                                        htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' />"
                                    End If
                                Else
                                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                        htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' />"
                                    Else
                                        htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='number' name=''  value=''  style='width:100%;' />"
                                    End If
                                End If
                            Else
                                If (datasheet.Cells(i, 11).Text <> Empty) Then
                                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                        If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                        htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onkeypress='return ValidateInput(id,event)'/>"
                                        Else
                                        htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' />"
                                        End If
                                        
                                    
                                        
                                    Else
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                     htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                     htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' />"
                                    End If
                                    
                                       
                                    End If
                                Else
                                    If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                        If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                        htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onkeypress='return ValidateInput(id,event)'/>"
                                        Else
                                        htmlRow = htmlRow + "<input class='optional' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' />"
                                        End If
                                        
                                        
                                    Else
                                    
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' onkeypress='return ValidateInput(id,event)' />"
                                    Else
                                    htmlRow = htmlRow + "<input id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' type='text' name=''  value=''  style='width:100%;' />"
                                    End If
                                    
                                        
                                    End If
                                End If
                            End If
                    End If
                
              End If
                htmlRow = htmlRow + "</td><td><label class='units' style='color: rgb(2, 113, 182)'>" + Replace(datasheet.Cells(i, 9).Text, "ºC", "&#8451;") + "</label></td>" + _
                "<td class= 'completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i) + ")><span class='popuptext' id='myPopup" + CStr(i) + "'>12/12/2017</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' style='width:100%' type='text'   name=''  value=''  disabled/></div></td><td class= 'completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i + 100) + "' style='width:100%' type='text' name='' value='' disabled/></div></td>" + _
                "</tr></table></div>"
                
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                
            
            ElseIf datasheet.Cells(i, 9).Text <> Empty Then
                htmlRow = htmlRow + "<table style = table-layout: fixed;><tr><td class='completiontd' width='10%'></td><td class ='completiontd'  width='6%'><div class='stepID' style='color: rgb(2, 113, 182)'>" + datasheet.Cells(i, 17).Text + "</div></td><td class= 'completiontd'  class='description'  width=50%><label class='completionLabel' id='label_reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "'> " + Replace(Replace(Replace(Replace(Replace(Replace(datasheet.Cells(i, 6).Text, "–", "&ndash;"), "‘", "&lsquo;"), "’", "&rsquo;"), "“", "&ldquo;"), "”", "&rdquo;"), "—", "&mdash;") + " </label></td><td class= 'completiontd'>"
                If (datasheet.Cells(i, 18).Text <> Empty Or datasheet.Cells(i, 19).Text <> Empty Or datasheet.Cells(i, 20).Text <> Empty Or datasheet.Cells(i, 21).Text <> Empty) Then
                   If (datasheet.Cells(i, 27).Text <> Empty And datasheet.Cells(i, 28).Text <> Empty) Then
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                Else
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                Else
                                htmlRow = htmlRow + "<input  style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                End If
                            End If
                        Else
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                    End If
                                    
                                    
                                Else
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                    End If
                                    
                                    
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                    End If
                                    
                                
                                    
                                Else
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input  style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                    htmlRow = htmlRow + "<input  style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onblur='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                    End If
                                    
                                    
                                End If
                            End If
                        End If
                   Else
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "'  onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                Else
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                Else
                                htmlRow = htmlRow + "<input  style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                End If
                            End If
                        Else
                            If (datasheet.Cells(i, 11).Text <> Empty) Then
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                     htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                     htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                    End If
                                    
                                   
                                Else
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                    htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                    End If
                                    
                                    
                                End If
                            Else
                                If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                    htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                    End If
                                    
                                    
                                Else
                                    If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                    htmlRow = htmlRow + "<input  style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")' onkeypress='return ValidateInput(id,event)'/>"
                                    Else
                                    htmlRow = htmlRow + "<input  style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='validateErrorWarningRange(id," + WarningRangeMin + "," + WarningRangeMax + "," + ErrorRangeMin + "," + ErrorRangeMax + ")'/>"
                                    End If
                                    
                                    
                                End If
                            End If
                        End If
                   End If
                        
                        
                Else
                    If (datasheet.Cells(i, 27).Text <> Empty And datasheet.Cells(i, 28).Text <> Empty) Then
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                        If (datasheet.Cells(i, 11).Text <> Empty) Then
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                            Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                            End If
                        Else
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                            Else
                                htmlRow = htmlRow + "<input  style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                            End If
                        End If
                    Else
                        If (datasheet.Cells(i, 11).Text <> Empty) Then
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                 htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onkeypress='return ValidateInput(id,event)'/>"
                                Else
                                 htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                End If
                                
                               
                            Else
                            
                                If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onkeypress='return ValidateInput(id,event)'/>"
                                Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                End If
                                
                                
                            End If
                        Else
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' onkeypress='return ValidateInput(id,event)'/>"
                                Else
                                htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                End If
                                
                                
                            Else
                                If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                 htmlRow = htmlRow + "<input  style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)'  onkeypress='return ValidateInput(id,event)'/>"
                                Else
                                 htmlRow = htmlRow + "<input  style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onchange='displaySteps(this.value, " + datasheet.Cells(i, 27).Text + "," + datasheet.Cells(i, 28).Text + ",""" + sheetName + """)' />"
                                End If
                                
                               
                            End If
                        End If
                    End If
                    Else
                        If (datasheet.Cells(i, 13).Text = Empty) Then
                        If (datasheet.Cells(i, 11).Text <> Empty) Then
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                            Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                            End If
                        Else
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                htmlRow = htmlRow + "<input class='optional' style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                            Else
                                htmlRow = htmlRow + "<input  style='width:100%' type='number'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                            End If
                        End If
                    Else
                        If (datasheet.Cells(i, 11).Text <> Empty) Then
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                            
                                If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onkeypress='return ValidateInput(id,event)'/>"
                                Else
                                htmlRow = htmlRow + "<input class='optional' onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                End If
                                
                                
                            Else
                                If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onkeypress='return ValidateInput(id,event)'/>"
                                Else
                                htmlRow = htmlRow + "<input onkeyup='" + datasheet.Cells(i, 11).Text + "' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                End If
                                
                                
                            End If
                        Else
                            If (LCase(datasheet.Cells(i, 7).Text) = "optional") Then
                                If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onkeypress='return ValidateInput(id,event)'/>"
                                Else
                                htmlRow = htmlRow + "<input class='optional' style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                End If
                                
                                
                            Else
                                If (LCase(datasheet.Cells(i, 13).Text) = "text-only") Then
                                htmlRow = htmlRow + "<input  style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' onkeypress='return ValidateInput(id,event)'/>"
                                Else
                                htmlRow = htmlRow + "<input  style='width:100%' type='text'   name=''  value='' id='readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' />"
                                End If
                                
                                
                            End If
                        End If
                    End If
                    End If
                    
                End If
                htmlRow = htmlRow + "</td><td style='font-family:Calibri, sans-serif; vertical-align: top;'><label class='units' style='color: rgb(2, 113, 182)'>" + Replace(datasheet.Cells(i, 9).Text, "ºC", "&#8451;") + "</label></td><td class= 'completiontd' style='padding-right: 0em;'>" + _
                "<div class='popup' onclick=myFunction(" + CStr(i) + ")><span class='popuptext' id='myPopup" + CStr(i) + "'>12/12/2017</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i) + "' style='width:100%' type='text'   name=''  value=''  disabled/></div>" + _
                "</td><td class= 'completiontd' style='padding-right: 0em;'><div class='popup' onclick=myFunction(" + CStr(i + 100) + ")><span class='popuptext' id='myPopup" + CStr(i + 100) + "'>12/12/2016</span><input id='reading_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i + 100) + "' style='width:100%' type='text' name='' value='' disabled/></div></td></tr></table></div>"
                
                id_index = id_index + 1
                ID_List(id_index) = datasheet.Cells(i, 17).Text + ":readingInput_" + sheetName + "_" + Replace(datasheet.Cells(i, 17).Text, ".", "_") + "_" + CStr(i)
                
            End If
            End If
            GetHTMLForReadingsHistory = htmlRow
End Function

Private Sub GetCondition(validation As String, currentLine As Integer, currentRow As Integer, sheetName As String)
    'Validations will be of the form:
    'if line 170 = NA || line 170 = Yes then,
    'line entry 180 = Pass && line entry 190 = NA && line entry 200 = Pass
    'elseif line 170 = No then,
    'line entry 180 = Pass && reset_values_on_line 190
    'Else:
    'reset_values_on_line 190 && reset_values_on_line 180

    '[iff_170,iff_||_170,elsif_170]
    '[NA,Yes,No]
    '[iff_180,iff_190,iff_200,elsif_180,elsif_190,else_190,else_180] [Pass,NA,Pass,Pass,reset_values_on_line,reset_values_on_line,reset_values_on_line]
    
    Dim condition As String
    Dim and_condition As Variant
    Dim or_condition As Variant
    Dim cdIndex As Integer
    Dim length As Integer
    Dim conditions As Variant
    Dim cdLHS(0 To 20) As String
    Dim cdRHS(0 To 20) As String
    Dim temp As String
    
    Dim datasheet As Worksheet
    Set datasheet = ThisWorkbook.Worksheets(sheetName)
    cdIndex = 0
    
    If (InStr(LCase(validation), "if") > 0) Then
        
        If (InStr(validation, "then,") > 0) Then
            condition = RTrim(LTrim(Split(validation, "then,")(0)))
        ElseIf (InStr(validation, "Then,") > 0) Then
            condition = RTrim(LTrim(Split(validation, "Then,")(0)))
        End If
        
        condition = LTrim(RTrim(Replace(Replace(Replace(condition, "if", ""), "If", ""), "line ", "")))
        
        If (InStr(condition, "&&") > 0) Then
            and_condition = Split(condition, "&&")
            length = (UBound(and_condition, 1) - LBound(and_condition, 1))
            For i = 0 To length
                If (i = 0) Then
                    If (InStr(and_condition(0), ">=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(and_condition(0), ">=")(0) + ""
                        cdRHS(cdIndex) = ">=" + Split(and_condition(0), ">=")(1) + ""
                    ElseIf (InStr(and_condition(0), ">") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(and_condition(0), ">")(0) + ""
                        cdRHS(cdIndex) = ">" + Split(and_condition(0), ">")(1) + ""
                    ElseIf (InStr(and_condition(0), "<=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(and_condition(0), "<=")(0) + ""
                        cdRHS(cdIndex) = "<=" + Split(and_condition(0), "<=")(1) + ""
                    ElseIf (InStr(and_condition(0), "<") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(and_condition(0), "<")(0) + ""
                        cdRHS(cdIndex) = "<" + Split(and_condition(0), "<")(1) + ""
                    ElseIf (InStr(and_condition(0), "==") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(and_condition(0), "==")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(and_condition(0), "==")(1) + ""
                    ElseIf (InStr(and_condition(0), "!=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(and_condition(0), "!=")(0) + ""
                        cdRHS(cdIndex) = "!=" + Split(and_condition(0), "!=")(1) + ""
                    ElseIf (InStr(and_condition(0), "=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(and_condition(0), "=")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(and_condition(0), "=")(1) + ""
                    End If
                    cdIndex = cdIndex + 1
                Else
                    
                    If (InStr(and_condition(i), ">=") > 0) Then
                        cdLHS(cdIndex) = "iff_&&_" + Split(and_condition(i), ">=")(0) + ""
                        cdRHS(cdIndex) = ">=" + Split(and_condition(i), ">=")(1) + ""
                    ElseIf (InStr(and_condition(i), ">") > 0) Then
                        cdLHS(cdIndex) = "iff_&&_" + Split(and_condition(i), ">")(0) + ""
                        cdRHS(cdIndex) = ">" + Split(and_condition(i), ">")(1) + ""
                    ElseIf (InStr(and_condition(i), "<=") > 0) Then
                        cdLHS(cdIndex) = "iff_&&_" + Split(and_condition(i), "<=")(0) + ""
                        cdRHS(cdIndex) = "<=" + Split(and_condition(i), "<=")(1) + ""
                    ElseIf (InStr(and_condition(i), "<") > 0) Then
                        cdLHS(cdIndex) = "iff_&&_" + Split(and_condition(i), "<")(0) + ""
                        cdRHS(cdIndex) = "<" + Split(and_condition(i), "<")(1) + ""
                    ElseIf (InStr(and_condition(i), "==") > 0) Then
                        cdLHS(cdIndex) = "iff_&&_" + Split(and_condition(i), "==")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(and_condition(i), "==")(1) + ""
                    ElseIf (InStr(and_condition(i), "!=") > 0) Then
                        cdLHS(cdIndex) = "iff_&&_" + Split(and_condition(i), "!=")(0) + ""
                        cdRHS(cdIndex) = "!=" + Split(and_condition(i), "!=")(1) + ""
                    ElseIf (InStr(and_condition(i), "=") > 0) Then
                        cdLHS(cdIndex) = "iff_&&_" + Split(and_condition(i), "=")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(and_condition(i), "=")(1) + ""
                    End If
                    cdIndex = cdIndex + 1
                End If
            Next
        ElseIf (InStr(condition, "||") > 0) Then
            or_condition = Split(condition, "||")
            length = (UBound(or_condition, 1) - LBound(or_condition, 1))
            For i = 0 To length
                If (i = 0) Then
                    
                    If (InStr(or_condition(i), ">=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(or_condition(i), ">=")(0) + ""
                        cdRHS(cdIndex) = ">=" + Split(or_condition(i), ">=")(1) + ""
                    ElseIf (InStr(or_condition(i), ">") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(or_condition(i), ">")(0) + ""
                        cdRHS(cdIndex) = ">" + Split(or_condition(i), ">")(1) + ""
                    ElseIf (InStr(or_condition(i), "<=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(or_condition(i), "<=")(0) + ""
                        cdRHS(cdIndex) = "<=" + Split(or_condition(i), "<=")(1) + ""
                    ElseIf (InStr(or_condition(i), "<") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(or_condition(i), "<")(0) + ""
                        cdRHS(cdIndex) = "<" + Split(or_condition(i), "<")(1) + ""
                    ElseIf (InStr(or_condition(i), "==") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(or_condition(i), "==")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(or_condition(i), "==")(1) + ""
                    ElseIf (InStr(or_condition(i), "!=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(or_condition(i), "!=")(0) + ""
                        cdRHS(cdIndex) = "!=" + Split(or_condition(i), "!=")(1) + ""
                    ElseIf (InStr(or_condition(i), "=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + Split(or_condition(i), "=")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(or_condition(i), "=")(1) + ""
                    End If
                    cdIndex = cdIndex + 1
                Else
                    
                    If (InStr(or_condition(i), ">=") > 0) Then
                        cdLHS(cdIndex) = "iff_||_" + LTrim(RTrim(Split(or_condition(i), ">=")(0))) + ""
                        cdRHS(cdIndex) = ">=" + LTrim(RTrim(Split(or_condition(i), ">=")(1))) + ""
                    ElseIf (InStr(or_condition(i), ">") > 0) Then
                        cdLHS(cdIndex) = "iff_||_" + LTrim(RTrim(Split(or_condition(i), ">")(0))) + ""
                        cdRHS(cdIndex) = ">" + LTrim(RTrim(Split(or_condition(i), ">")(1))) + ""
                    ElseIf (InStr(or_condition(i), "<=") > 0) Then
                        cdLHS(cdIndex) = "iff_||_" + LTrim(RTrim(Split(or_condition(i), "<=")(0))) + ""
                        cdRHS(cdIndex) = "<=" + LTrim(RTrim(Split(or_condition(i), "<=")(1))) + ""
                    ElseIf (InStr(or_condition(i), "<") > 0) Then
                        cdLHS(cdIndex) = "iff_||_" + LTrim(RTrim(Split(or_condition(i), "<")(0))) + ""
                        cdRHS(cdIndex) = "<" + LTrim(RTrim(Split(or_condition(i), "<")(1))) + ""
                    ElseIf (InStr(or_condition(i), "==") > 0) Then
                        cdLHS(cdIndex) = "iff_||_" + LTrim(RTrim(Split(or_condition(i), "==")(0))) + ""
                        cdRHS(cdIndex) = "==" + LTrim(RTrim(Split(or_condition(i), "==")(1))) + ""
                    ElseIf (InStr(or_condition(i), "!=") > 0) Then
                        cdLHS(cdIndex) = "iff_||_" + LTrim(RTrim(Split(or_condition(i), "!=")(0))) + ""
                        cdRHS(cdIndex) = "!=" + LTrim(RTrim(Split(or_condition(i), "!=")(1))) + ""
                    ElseIf (InStr(or_condition(i), "=") > 0) Then
                        cdLHS(cdIndex) = "iff_||_" + LTrim(RTrim(Split(or_condition(i), "=")(0))) + ""
                        cdRHS(cdIndex) = "==" + LTrim(RTrim(Split(or_condition(i), "=")(1))) + ""
                    End If
                    cdIndex = cdIndex + 1
                End If
            Next
        Else
            'only one condition:
            length = 1
            For i = 0 To length
                If (i = 0) Then
                    If (InStr(condition, ">=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + RTrim(LTrim(Replace(Split(condition, ">=")(0), "line", ""))) + ""
                        cdRHS(cdIndex) = ">=" + RTrim(LTrim(Replace(Split(condition, ">=")(1), "line", ""))) + ""
                    ElseIf (InStr(condition, ">") > 0) Then
                        cdLHS(cdIndex) = "iff_" + RTrim(LTrim(Replace(Split(condition, ">")(0), "line", ""))) + ""
                        cdRHS(cdIndex) = ">" + RTrim(LTrim(Replace(Split(condition, ">")(1), "line", ""))) + ""
                    ElseIf (InStr(condition, "<=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + RTrim(LTrim(Replace(Split(condition, "<=")(0), "line", ""))) + ""
                        cdRHS(cdIndex) = "<=" + RTrim(LTrim(Replace(Split(condition, "<=")(1), "line", ""))) + ""
                    ElseIf (InStr(condition, "<") > 0) Then
                        cdLHS(cdIndex) = "iff_" + RTrim(LTrim(Replace(Split(condition, "<")(0), "line", ""))) + ""
                        cdRHS(cdIndex) = "<" + RTrim(LTrim(Replace(Split(condition, "<")(1), "line", ""))) + ""
                    ElseIf (InStr(condition, "==") > 0) Then
                        cdLHS(cdIndex) = "iff_" + RTrim(LTrim(Replace(Split(condition, "==")(0), "line", ""))) + ""
                        cdRHS(cdIndex) = "==" + RTrim(LTrim(Replace(Split(condition, "==")(1), "line", ""))) + ""
                    ElseIf (InStr(condition, "!=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + RTrim(LTrim(Replace(Split(condition, "!=")(0), "line", ""))) + ""
                        cdRHS(cdIndex) = "!=" + RTrim(LTrim(Replace(Split(condition, "!=")(1), "line", ""))) + ""
                    ElseIf (InStr(condition, "=") > 0) Then
                        cdLHS(cdIndex) = "iff_" + RTrim(LTrim(Replace(Split(condition, "=")(0), "line", ""))) + ""
                        cdRHS(cdIndex) = "==" + RTrim(LTrim(Replace(Split(condition, "=")(1), "line", ""))) + ""
                    End If
                    cdIndex = cdIndex + 1
                End If
            Next
        End If
    End If
    
    If (InStr(LCase(validation), "elseif") > 0) Then
        validation = Split(validation, "elseif")(1)
        If (InStr(validation, "then,") > 0) Then
            condition = RTrim(LTrim(Split(validation, "then,")(0)))
        ElseIf (InStr(validation, "Then,") > 0) Then
            condition = RTrim(LTrim(Split(validation, "Then,")(0)))
        End If
        
        
        
        condition = RTrim(LTrim(Replace(Replace(Replace(Replace(condition, "elseif", ""), "ElseIf", ""), "elseIf", ""), "line ", "")))
        
        If (InStr(condition, "&&") > 0) Then
            and_condition = Split(condition, "&&")
            length = (UBound(and_condition, 1) - LBound(and_condition, 1))
            For i = 0 To length
                If (i = 0) Then
                    
                    If (InStr(and_condition(0), ">=") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(and_condition(0), ">=")(0) + ""
                        cdRHS(cdIndex) = ">=" + Split(and_condition(0), ">=")(1) + ""
                    ElseIf (InStr(and_condition(0), ">") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(and_condition(0), ">")(0) + ""
                        cdRHS(cdIndex) = ">" + Split(and_condition(0), ">")(1) + ""
                    ElseIf (InStr(and_condition(0), "<=") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(and_condition(0), "<=")(0) + ""
                        cdRHS(cdIndex) = "<=" + Split(and_condition(0), "<=")(1) + ""
                    ElseIf (InStr(and_condition(0), "<") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(and_condition(0), "<")(0) + ""
                        cdRHS(cdIndex) = "<" + Split(and_condition(0), "<")(1) + ""
                    ElseIf (InStr(and_condition(0), "==") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(and_condition(0), "==")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(and_condition(0), "==")(1) + ""
                    ElseIf (InStr(and_condition(0), "!=") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(and_condition(0), "!=")(0) + ""
                        cdRHS(cdIndex) = "!=" + Split(and_condition(0), "!=")(1) + ""
                    ElseIf (InStr(and_condition(0), "=") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(and_condition(0), "=")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(and_condition(0), "=")(1) + ""
                    End If
                    cdIndex = cdIndex + 1
                Else
                    
                    If (InStr(and_condition(i), ">=") > 0) Then
                        cdLHS(cdIndex) = "elsif_&&_" + Split(and_condition(i), ">=")(0) + ""
                        cdRHS(cdIndex) = ">=" + Split(and_condition(i), ">=")(1) + ""
                    ElseIf (InStr(and_condition(i), ">") > 0) Then
                        cdLHS(cdIndex) = "elsif_&&_" + Split(and_condition(i), ">")(0) + ""
                        cdRHS(cdIndex) = ">" + Split(and_condition(i), ">")(1) + ""
                    ElseIf (InStr(and_condition(i), "<=") > 0) Then
                        cdLHS(cdIndex) = "elsif_&&_" + Split(and_condition(i), "<=")(0) + ""
                        cdRHS(cdIndex) = "<=" + Split(and_condition(i), "<=")(1) + ""
                    ElseIf (InStr(and_condition(i), "<") > 0) Then
                        cdLHS(cdIndex) = "elsif_&&_" + Split(and_condition(i), "<")(0) + ""
                        cdRHS(cdIndex) = "<" + Split(and_condition(i), "<")(1) + ""
                    ElseIf (InStr(and_condition(i), "==") > 0) Then
                        cdLHS(cdIndex) = "elsif_&&_" + Split(and_condition(i), "==")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(and_condition(i), "==")(1) + ""
                    ElseIf (InStr(and_condition(i), "!=") > 0) Then
                        cdLHS(cdIndex) = "elsif_&&_" + Split(and_condition(i), "!=")(0) + ""
                        cdRHS(cdIndex) = "!=" + Split(and_condition(i), "!=")(1) + ""
                    ElseIf (InStr(and_condition(i), "=") > 0) Then
                        cdLHS(cdIndex) = "elsif_&&_" + Split(and_condition(i), "=")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(and_condition(i), "=")(1) + ""
                    End If
                    cdIndex = cdIndex + 1
                End If
            Next
        ElseIf (InStr(condition, "||") > 0) Then
            or_condition = Split(condition, "||")
            length = (UBound(and_condition, 1) - LBound(and_condition, 1))
            For i = 0 To length
                If (i = 0) Then
                    
                    If (InStr(or_condition(0), ">=") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(or_condition(0), ">=")(0) + ""
                        cdRHS(cdIndex) = ">=" + Split(or_condition(0), ">=")(1) + ""
                    ElseIf (InStr(or_condition(0), ">") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(or_condition(0), ">")(0) + ""
                        cdRHS(cdIndex) = ">" + Split(or_condition(0), ">")(1) + ""
                    ElseIf (InStr(or_condition(0), "<=") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(or_condition(0), "<=")(0) + ""
                        cdRHS(cdIndex) = "<=" + Split(or_condition(0), "<=")(1) + ""
                    ElseIf (InStr(or_condition(0), "<") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(or_condition(0), "<")(0) + ""
                        cdRHS(cdIndex) = "<" + Split(or_condition(0), "<")(1) + ""
                    ElseIf (InStr(or_condition(0), "==") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(or_condition(0), "==")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(or_condition(0), "==")(1) + ""
                    ElseIf (InStr(or_condition(0), "!=") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(or_condition(0), "!=")(0) + ""
                        cdRHS(cdIndex) = "!=" + Split(or_condition(0), "!=")(1) + ""
                    ElseIf (InStr(or_condition(0), "=") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(or_condition(0), "=")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(or_condition(0), "=")(1) + ""
                    End If
                    cdIndex = cdIndex + 1
                Else
                    
                    If (InStr(or_condition(i), ">=") > 0) Then
                        cdLHS(cdIndex) = "elsif_||_" + Split(or_condition(i), ">=")(0) + ""
                        cdRHS(cdIndex) = ">=" + Split(or_condition(i), ">=")(1) + ""
                    ElseIf (InStr(or_condition(i), ">") > 0) Then
                        cdLHS(cdIndex) = "elsif_||_" + Split(or_condition(i), ">")(0) + ""
                        cdRHS(cdIndex) = ">" + Split(or_condition(i), ">")(1) + ""
                    ElseIf (InStr(or_condition(i), "<=") > 0) Then
                        cdLHS(cdIndex) = "elsif_||_" + Split(or_condition(i), "<=")(0) + ""
                        cdRHS(cdIndex) = "<=" + Split(or_condition(i), "<=")(1) + ""
                    ElseIf (InStr(or_condition(i), "<") > 0) Then
                        cdLHS(cdIndex) = "elsif_||_" + Split(or_condition(i), "<")(0) + ""
                        cdRHS(cdIndex) = "<" + Split(or_condition(i), "<")(1) + ""
                    ElseIf (InStr(or_condition(i), "==") > 0) Then
                        cdLHS(cdIndex) = "elsif_||_" + Split(or_condition(i), "==")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(or_condition(i), "==")(1) + ""
                    ElseIf (InStr(or_condition(i), "!=") > 0) Then
                        cdLHS(cdIndex) = "elsif_||_" + Split(or_condition(i), "!=")(0) + ""
                        cdRHS(cdIndex) = "!=" + Split(or_condition(i), "!=")(1) + ""
                    ElseIf (InStr(or_condition(i), "=") > 0) Then
                        cdLHS(cdIndex) = "elsif_||_" + Split(or_condition(i), "=")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(or_condition(i), "=")(1) + ""
                    End If
                    cdIndex = cdIndex + 1
                End If
            Next
        Else
            'Contains only one condition:
            length = 1
            For i = 0 To length
                If (i = 0) Then
                    
                    If (InStr(condition, ">=") > 0) Then
                        cdLHS(cdIndex) = "elsif_" + Split(condition, ">=")(0) + ""
                        cdRHS(cdIndex) = ">=" + Split(condition, ">=")(1) + ""
                    ElseIf (InStr(condition, ">")) Then
                        cdLHS(cdIndex) = "elsif_" + Split(condition, ">")(0) + ""
                        cdRHS(cdIndex) = ">" + Split(condition, ">")(1) + ""
                    ElseIf (InStr(condition, "<=")) Then
                        cdLHS(cdIndex) = "elsif_" + Split(condition, "<=")(0) + ""
                        cdRHS(cdIndex) = "<=" + Split(condition, "<=")(1) + ""
                    ElseIf (InStr(condition, "<")) Then
                        cdLHS(cdIndex) = "elsif_" + Split(condition, "<")(0) + ""
                        cdRHS(cdIndex) = "<" + Split(condition, "<")(1) + ""
                    ElseIf (InStr(condition, "==")) Then
                        cdLHS(cdIndex) = "elsif_" + Split(condition, "==")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(condition, "==")(1) + ""
                    ElseIf (InStr(condition, "!=")) Then
                        cdLHS(cdIndex) = "elsif_" + Split(condition, "!=")(0) + ""
                        cdRHS(cdIndex) = "!=" + Split(condition, "!=")(1) + ""
                    ElseIf (InStr(condition, "=")) Then
                        cdLHS(cdIndex) = "elsif_" + Split(condition, "=")(0) + ""
                        cdRHS(cdIndex) = "==" + Split(condition, "=")(1) + ""
                    End If
                    cdIndex = cdIndex + 1
                End If
            Next
        End If
    End If
    'Write output to 25th Cell:
    
    temp = "["
    
    For i = 0 To length
        If (cdLHS(i) <> Empty) Then
            If (i = cdIndex - 1) Then
                temp = temp + "'" + cdLHS(i) + "'"
            Else
                temp = temp + "'" + cdLHS(i) + "',"
            End If
        End If
    Next
    
    temp = temp + "],["
    
    For i = 0 To length
        If (cdRHS(i) <> Empty) Then
            If (i = cdIndex - 1) Then
                temp = temp + "'" + cdRHS(i) + "'"
            Else
                temp = temp + "'" + cdRHS(i) + "',"
            End If
        End If
    Next
    
    temp = temp + "]"
    
    datasheet.Cells(currentRow, 31).Value = temp ' changed 31 to 25
    
End Sub

Private Sub GetStatement(validation As String, currentLine As Integer, currentRow As Integer, sheetName As String)
    Dim statement As String
    Dim stLHS(0 To 70) As String
    Dim stRHS(0 To 70) As String
    Dim stIndex As Integer
    
    Dim length As Integer
    Dim nextline As Integer
    Dim temp As String
    
    Dim datasheet As Worksheet
    Set datasheet = ThisWorkbook.Worksheets(sheetName)
    
    Dim else_statement As String
    Dim if_statement As String
    Dim else_if_statement As String
    
    nextline = currentLine + 10
    previousline = currentLine - 10
    stIndex = 0
    
    validation = datasheet.Cells(currentRow, 26).Value
    
    If (InStr(validation, "else:") > 0) Then
        else_statement = Split(validation, "else:")(1)
        If (InStr(validation, "elseif") > 0) Then
            If (InStr(validation, "then,") > 0) Then
                else_if_statement = Split(Split(validation, "else:")(0), "then,")(2)
                if_statement = Split(Split(validation, "elseif")(0), "then,")(1)
            ElseIf (InStr(validation, "then,") > 0) Then
                else_if_statement = Split(Split(validation, "else:")(0), "Then,")(2)
                if_statement = Split(Split(validation, "elseif")(0), "Then,")(1)
            End If
        ElseIf (InStr(validation, "Elseif") > 0) Then
            If (InStr(validation, "then,") > 0) Then
                else_if_statement = Split(Split(validation, "else:")(0), "then,")(2)
                if_statement = Split(Split(validation, "Elseif")(0), "then,")(1)
            ElseIf (InStr(validation, "Then,") > 0) Then
                else_if_statement = Split(Split(validation, "else:")(0), "Then,")(2)
                if_statement = Split(Split(validation, "Elseif")(0), "Then,")(1)
            End If
        Else
            If (InStr(validation, "then,") > 0) Then
                if_statement = Split(Split(validation, "else:")(0), "then,")(1)
            ElseIf (InStr(validation, "Then,") > 0) Then
                if_statement = Split(Split(validation, "else:")(0), "Then,")(1)
            End If
        End If
    ElseIf (InStr(validation, "Else:") > 0) Then
        else_statement = Split(validation, "Else:")(1)
        If (InStr(validation, "elseif") > 0) Then
            If (InStr(validation, "then,") > 0) Then
                else_if_statement = Split(Split(validation, "Else:")(0), "then,")(2)
                if_statement = Split(Split(validation, "elseif")(0), "then,")(1)
            ElseIf (InStr(validation, "Then,") > 0) Then
                else_if_statement = Split(Split(validation, "Else:")(0), "Then,")(2)
                if_statement = Split(Split(validation, "elseif")(0), "Then,")(1)
            End If
        ElseIf (InStr(validation, "Elseif") > 0) Then
            If (InStr(validation, "then,") > 0) Then
                else_if_statement = Split(Split(validation, "Else:")(0), "then,")(2)
                if_statement = Split(Split(validation, "Elseif")(0), "then,")(1)
            ElseIf (InStr(validation, "Then,") > 0) Then
                else_if_statement = Split(Split(validation, "Else:")(0), "Then,")(2)
                if_statement = Split(Split(validation, "Elseif")(0), "Then,")(1)
            End If
        Else
            If (InStr(validation, "then,") > 0) Then
                if_statement = Split(Split(validation, "Else:")(0), "then,")(1)
            ElseIf (InStr(validation, "Then,") > 0) Then
                if_statement = Split(Split(validation, "Else:")(0), "Then,")(1)
            End If
        End If
        
    End If
    
        If (InStr(if_statement, "&&") > 0) Then 'there is more than one statements
            statements = Split(if_statement, "&&")
            'statements.Size
            length = (UBound(Split(if_statement, "&&"), 1) - LBound(Split(if_statement, "&&"), 1))
            'statements.Len
            'Split(statement, "&&").Count
            
            For i = 0 To length
                If (statements(i) <> Empty) Then
                    statements(i) = Replace(statements(i), vbLf, "")
                    If (InStr(LCase(statements(i)), "continue to") > 0) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "iff_" + CStr(nextline)
                            stRHS(stIndex) = "continue"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "iff_" + RTrim(LTrim(Split(statements(i), " ")(3)))
                            stRHS(stIndex) = "continue"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "skip")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "iff_" + CStr(nextline)
                            stRHS(stIndex) = "skip"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "iff_" + RTrim(LTrim(Split(statements(i), " ")(2)))
                            stRHS(stIndex) = "skip"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "return to")) Then
                        If (InStr(LCase(statements(i)), "previous line") > 0) Then
                            stLHS(stIndex) = "iff_" + previousline
                            stRHS(stIndex) = "return"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "iff_" + RTrim(LTrim(Split(statements(i), " ")(3)))
                            stRHS(stIndex) = "return"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "confirm")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "iff_" + CStr(nextline)
                            stRHS(stIndex) = "confirm"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                           stLHS(stIndex) = "iff_" + RTrim(LTrim(Split(statements(i), " ")(4)))
                            stRHS(stIndex) = "confirm"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "line entry") > 0) Then
                        stLHS(stIndex) = "iff_" + "set_" + RTrim(LTrim(Split(Replace(statements(i), "line entry ", ""), "=")(0)))
                        stRHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(statements(i), "line entry ", ""), "=")(1)))
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "line entries") > 0) Then
                        'statements (i)
                    ElseIf (InStr(LCase(statements(i)), "revert_changes_to_line") > 0) Then
                        stRHS(stIndex) = "revert_changes_to_line"
                        stLHS(stIndex) = "iff_" + Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "reset_values_on_line") > 0) Then
                        stRHS(stIndex) = "reset_values_on_line"
                        stLHS(stIndex) = "iff_" + Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                    Else 'all default options:
                        stLHS(stIndex) = "iff_" + "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                    End If
                End If
            Next
        
        Else ' only one statement exists:
            If (if_statement <> Empty) Then
                if_statement = Replace(if_statement, vbLf, "")
                If (InStr(LCase(if_statement), "continue to") > 0) Then
                    If (InStr(LCase(if_statement), "next line") > 0) Then
                        stLHS(stIndex) = "iff_" + CStr(nextline)
                        stRHS(stIndex) = "continue"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(if_statement), "line") > 0) Then
                        stLHS(stIndex) = "iff_" + RTrim(LTrim(Split(if_statement, " ")(3)))
                        stRHS(stIndex) = "continue"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(if_statement), "skip") > 0) Then
                    If (InStr(LCase(if_statement), "next line") > 0) Then
                        stLHS(stIndex) = "iff_" + CStr(nextline)
                        stRHS(stIndex) = "skip"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(if_statement), "line") > 0) Then
                        stLHS(stIndex) = "iff_" + RTrim(LTrim(Split(if_statement, " ")(2)))
                        stRHS(stIndex) = "skip"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(if_statement), "return to") > 0) Then
                    If (InStr(LCase(if_statement), "next line") > 0) Then
                        stLHS(stIndex) = "iff_" + CStr(nextline)
                        stRHS(stIndex) = "return"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(if_statement), "line") > 0) Then
                        stLHS(stIndex) = "iff_" + RTrim(LTrim(Split(if_statement, " ")(3)))
                        stRHS(stIndex) = "return"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(if_statement), "confirm") > 0) Then
                    If (InStr(LCase(if_statement), "next line") > 0) Then
                        stLHS(stIndex) = "iff_" + CStr(nextline)
                        stRHS(stIndex) = "confirm"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(if_statement), "line") > 0) Then
                        stLHS(stIndex) = "iff_" + RTrim(LTrim(Split(if_statement, " ")(4)))
                        stRHS(stIndex) = "confirm"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(if_statement), "line entry") > 0) Then
                        stLHS(stIndex) = "iff_" + "set_" + RTrim(LTrim(Split(Replace(Replace(if_statement, "line entry", ""), "Line entry", ""), "=")(0)))
                        stRHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(Replace(if_statement, "line entry", ""), "Line entry", ""), "=")(1)))
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(if_statement), "revert_changes_to_line") > 0) Then
                        stRHS(stIndex) = "revert_changes_to_line"
                        stLHS(stIndex) = "iff_" + Split(RTrim(LTrim(if_statement)), " ")(1)
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(if_statement), "reset_values_on_line") > 0) Then
                        stRHS(stIndex) = "reset_values_on_line"
                        stLHS(stIndex) = "iff_" + Split(RTrim(LTrim(if_statement)), " ")(1)
                        stIndex = stIndex + 1
                Else 'all default options:
                        stLHS(stIndex) = "iff_" + "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                End If
            End If
        
        End If
        
        If (InStr(else_if_statement, "&&") > 0) Then 'there is more than one statements
            statements = Split(else_if_statement, "&&")
            'statements.Size
            length = (UBound(Split(else_if_statement, "&&"), 1) - LBound(Split(else_if_statement, "&&"), 1))
            'statements.Len
            'Split(statement, "&&").Count
            
            For i = 0 To length
                If (statements(i) <> Empty) Then
                    statements(i) = Replace(statements(i), vbLf, "")
                    If (InStr(LCase(statements(i)), "continue to") > 0) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "elsif_" + CStr(nextline)
                            stRHS(stIndex) = "continue"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "elsif_" + RTrim(LTrim(Split(statements(i), " ")(3)))
                            stRHS(stIndex) = "continue"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "skip")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "elsif_" + CStr(nextline)
                            stRHS(stIndex) = "skip"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "elsif_" + RTrim(LTrim(Split(statements(i), " ")(2)))
                            stRHS(stIndex) = "skip"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "return to")) Then
                        If (InStr(LCase(statements(i)), "previous line") > 0) Then
                            stLHS(stIndex) = "elsif_" + previousline
                            stRHS(stIndex) = "return"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "elsif_" + RTrim(LTrim(Split(statements(i), " ")(3)))
                            stRHS(stIndex) = "return"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "confirm")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "elsif_" + CStr(nextline)
                            stRHS(stIndex) = "confirm"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                           stLHS(stIndex) = "elsif_" + RTrim(LTrim(Split(statements(i), " ")(4)))
                            stRHS(stIndex) = "confirm"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "line entry") > 0) Then
                        stLHS(stIndex) = "elsif_" + "set_" + RTrim(LTrim(Split(Replace(statements(i), "line entry ", ""), "=")(0)))
                        stRHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(statements(i), "line entry ", ""), "=")(1)))
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "line entries") > 0) Then
                        'statements (i)
                    ElseIf (InStr(LCase(statements(i)), "revert_changes_to_line") > 0) Then
                        stRHS(stIndex) = "revert_changes_to_line"
                        stLHS(stIndex) = "elsif_" + Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "reset_values_on_line") > 0) Then
                        stRHS(stIndex) = "reset_values_on_line"
                        stLHS(stIndex) = "elsif_" + Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                    Else 'all default options:
                        stLHS(stIndex) = "elsif_" + "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                    End If
                End If
            Next
        
        Else ' only one statement exists:
            If (else_if_statement <> Empty) Then
                else_if_statement = Replace(else_if_statement, vbLf, "")
                If (InStr(LCase(else_if_statement), "continue to") > 0) Then
                    If (InStr(LCase(else_if_statement), "next line") > 0) Then
                        stLHS(stIndex) = "elsif_" + CStr(nextline)
                        stRHS(stIndex) = "continue"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(else_if_statement), "line") > 0) Then
                        stLHS(stIndex) = "elsif_" + RTrim(LTrim(Split(else_if_statement, " ")(3)))
                        stRHS(stIndex) = "continue"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(else_if_statement), "skip") > 0) Then
                    If (InStr(LCase(else_if_statement), "next line") > 0) Then
                        stLHS(stIndex) = "elsif_" + CStr(nextline)
                        stRHS(stIndex) = "skip"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(else_if_statement), "line") > 0) Then
                        stLHS(stIndex) = "elsif_" + RTrim(LTrim(Split(else_if_statement, " ")(2)))
                        stRHS(stIndex) = "skip"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(else_if_statement), "return to") > 0) Then
                    If (InStr(LCase(else_if_statement), "next line") > 0) Then
                        stLHS(stIndex) = "elsif_" + CStr(nextline)
                        stRHS(stIndex) = "return"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(else_if_statement), "line") > 0) Then
                        stLHS(stIndex) = "elsif_" + RTrim(LTrim(Split(else_if_statement, " ")(3)))
                        stRHS(stIndex) = "return"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(else_if_statement), "confirm") > 0) Then
                    If (InStr(LCase(else_if_statement), "next line") > 0) Then
                        stLHS(stIndex) = "elsif_" + CStr(nextline)
                        stRHS(stIndex) = "confirm"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(else_if_statement), "line") > 0) Then
                        stLHS(stIndex) = "elsif_" + RTrim(LTrim(Split(else_if_statement, " ")(4)))
                        stRHS(stIndex) = "confirm"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(else_if_statement), "line entry") > 0) Then
                        stLHS(stIndex) = "elsif_" + "set_" + RTrim(LTrim(Split(Replace(Replace(else_if_statement, "line entry", ""), "Line entry", ""), "=")(0)))
                        stRHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(Replace(else_if_statement, "line entry", ""), "Line entry", ""), "=")(1)))
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(else_if_statement), "revert_changes_to_line") > 0) Then
                        stRHS(stIndex) = "revert_changes_to_line"
                        stLHS(stIndex) = "elsif_" + Split(RTrim(LTrim(else_if_statement)), " ")(1)
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(else_if_statement), "reset_values_on_line") > 0) Then
                        stRHS(stIndex) = "reset_values_on_line"
                        stLHS(stIndex) = "elsif_" + Split(RTrim(LTrim(else_if_statement)), " ")(1)
                        stIndex = stIndex + 1
                Else 'all default options:
                        stLHS(stIndex) = "elsif_" + "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                End If
            End If
        
        End If
    
        If (InStr(else_statement, "&&") > 0) Then 'there is more than one statements
            statements = Split(else_statement, "&&")
            'statements.Size
            length = (UBound(Split(else_statement, "&&"), 1) - LBound(Split(else_statement, "&&"), 1))
            'statements.Len
            'Split(statement, "&&").Count
            
            For i = 0 To length
                If (statements(i) <> Empty) Then
                    statements(i) = Replace(statements(i), vbLf, "")
                    If (InStr(LCase(statements(i)), "continue to") > 0) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "else_" + CStr(nextline)
                            stRHS(stIndex) = "continue"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "else_" + RTrim(LTrim(Split(statements(i), " ")(3)))
                            stRHS(stIndex) = "continue"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "skip")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "else_" + CStr(nextline)
                            stRHS(stIndex) = "skip"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "else_" + RTrim(LTrim(Split(statements(i), " ")(2)))
                            stRHS(stIndex) = "skip"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "return to")) Then
                        If (InStr(LCase(statements(i)), "previous line") > 0) Then
                            stLHS(stIndex) = "else_" + previousline
                            stRHS(stIndex) = "return"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "else_" + RTrim(LTrim(Split(statements(i), " ")(3)))
                            stRHS(stIndex) = "return"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "confirm")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "else_" + CStr(nextline)
                            stRHS(stIndex) = "confirm"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                           stLHS(stIndex) = "else_" + RTrim(LTrim(Split(statements(i), " ")(4)))
                            stRHS(stIndex) = "confirm"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "line entry") > 0) Then
                        stLHS(stIndex) = "else_" + "set_" + RTrim(LTrim(Split(Replace(statements(i), "line entry ", ""), "=")(0)))
                        stRHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(statements(i), "line entry ", ""), "=")(1)))
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "line entries") > 0) Then
                        'statements (i)
                    ElseIf (InStr(LCase(statements(i)), "revert_changes_to_line") > 0) Then
                        stRHS(stIndex) = "revert_changes_to_line"
                        stLHS(stIndex) = "else_" + Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "reset_values_on_line") > 0) Then
                        stRHS(stIndex) = "reset_values_on_line"
                        stLHS(stIndex) = "else_" + Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                    Else 'all default options:
                        stLHS(stIndex) = "else_" + "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                    End If
                End If
            Next
        
        Else ' only one statement exists:
            If (else_statement <> Empty) Then
                else_statement = Replace(else_statement, vbLf, "")
                If (InStr(LCase(else_statement), "continue to") > 0) Then
                    If (InStr(LCase(else_statement), "next line") > 0) Then
                        stLHS(stIndex) = "else_" + CStr(nextline)
                        stRHS(stIndex) = "continue"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(else_statement), "line") > 0) Then
                        stLHS(stIndex) = "else_" + RTrim(LTrim(Split(else_statement, " ")(3)))
                        stRHS(stIndex) = "continue"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(else_statement), "skip") > 0) Then
                    If (InStr(LCase(else_statement), "next line") > 0) Then
                        stLHS(stIndex) = "else_" + CStr(nextline)
                        stRHS(stIndex) = "skip"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(else_statement), "line") > 0) Then
                        stLHS(stIndex) = "else_" + RTrim(LTrim(Split(else_statement, " ")(2)))
                        stRHS(stIndex) = "skip"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(else_statement), "return to") > 0) Then
                    If (InStr(LCase(else_statement), "next line") > 0) Then
                        stLHS(stIndex) = "else_" + CStr(nextline)
                        stRHS(stIndex) = "return"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(else_statement), "line") > 0) Then
                        stLHS(stIndex) = "else_" + RTrim(LTrim(Split(else_statement, " ")(3)))
                        stRHS(stIndex) = "return"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(else_statement), "confirm") > 0) Then
                    If (InStr(LCase(else_statement), "next line") > 0) Then
                        stLHS(stIndex) = "else_" + CStr(nextline)
                        stRHS(stIndex) = "confirm"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(else_statement), "line") > 0) Then
                        stLHS(stIndex) = "else_" + RTrim(LTrim(Split(else_statement, " ")(4)))
                        stRHS(stIndex) = "confirm"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(else_statement), "line entry") > 0) Then
                        stLHS(stIndex) = "else_" + "set_" + RTrim(LTrim(Split(Replace(Replace(else_statement, "line entry", ""), "Line entry", ""), "=")(0)))
                        stRHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(Replace(else_statement, "line entry", ""), "Line entry", ""), "=")(1)))
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(else_statement), "revert_changes_to_line") > 0) Then
                        stRHS(stIndex) = "revert_changes_to_line"
                        stLHS(stIndex) = "else_" + Split(RTrim(LTrim(else_statement)), " ")(1)
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(else_statement), "reset_values_on_line") > 0) Then
                        stRHS(stIndex) = "reset_values_on_line"
                        stLHS(stIndex) = "else_" + Split(RTrim(LTrim(else_statement)), " ")(1)
                        stIndex = stIndex + 1
                Else 'all default options:
                        stLHS(stIndex) = "else_" + "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                End If
            End If
        
        End If
        
        temp = ",["
    
    length = (UBound(stLHS, 1) - LBound(stLHS, 1))
    If (length > 0) Then
    For i = 0 To length
        If (stLHS(i) <> Empty) Then
        If (i = stIndex - 1) Then
            temp = temp + "'" + stLHS(i) + "'"
        Else
            temp = temp + "'" + stLHS(i) + "',"
        End If
        End If
    Next
    
    temp = temp + "],["
    
    For i = 0 To length
    If (stRHS(i) <> Empty) Then
        If (i = stIndex - 1) Then
            temp = temp + "'" + stRHS(i) + "'"
        Else
            temp = temp + "'" + stRHS(i) + "',"
        End If
        End If
    Next
    End If
    temp = temp + "]"
    
    
    datasheet.Cells(currentRow, 31).Value = datasheet.Cells(currentRow, 31).Text + temp ' changed 31 to 25
    
    
End Sub


Private Sub DeduceValidationV2(validation As String, currentLine As Integer, currentRow As Integer, sheetName As String)

    Dim statement As String
    'Dim statements(0 To 20) As String
    Dim statements As Variant
    
    Dim stLHS(0 To 100) As String
    Dim stRHS(0 To 100) As String
    Dim stIndex As Integer
    
    Dim length As Integer
    Dim nextline As Integer
    
    Dim condition As String
    'Dim conditions(0 To 20) As String
    Dim conditions As Variant
    Dim cdLHS(0 To 20) As String
    Dim cdRHS(0 To 20) As String
    Dim cdIndex As Integer
    
    Dim datasheet As Worksheet
    Set datasheet = ThisWorkbook.Worksheets(sheetName)
   
    Dim dict As Object
    Set dict = CreateObject("Scripting.Dictionary")
    Dim key, val
    
    Dim i As Integer
    
    validation = validation 'validation is now in lower case
    nextline = currentLine + 10
    stIndex = 0
    cdIndex = 0
    
    If (InStr(LCase(validation), "if ") > 0) Then
        
        'validation = if line 420 = yes && line 430 = no then,
        'continue to next line && set line 433 as Yes
        
        'condition:
        If (InStr(validation, "then,") > 0) Then
            condition = RTrim(LTrim(Split(validation, "then,")(0)))
        ElseIf (InStr(validation, "Then") > 0) Then
            condition = RTrim(LTrim(Split(validation, "Then,")(0)))
        End If
        'condition = Split(validation, "then,")(0)
        
        If (InStr(condition, "&&") > 0) Then 'there is more than one condition to satisfy
            conditions = Split(condition, "&&")
            length = (UBound(Split(condition, "&&"), 1) - LBound(Split(condition, "&&"), 1))
            For i = 0 To length
                If (conditions(i) <> Empty) Then
                    If (InStr(conditions(i), "=") > 0) Then
                        conditions(i) = Replace(Replace(Replace(conditions(i), "if line", ""), "If line", ""), "line", "")
                        cdLHS(cdIndex) = RTrim(LTrim(Split(conditions(i), "=")(0)))
                        cdRHS(cdIndex) = RTrim(LTrim(Split(conditions(i), "=")(1)))
                        cdIndex = cdIndex + 1
                    End If
                End If
            Next
        
        Else ' only one condition exists:
            If (InStr(condition, "=") > 0) Then
                condition = RTrim(LTrim(Replace(Replace(condition, "if line", ""), "If line", "")))
                condition = Replace(condition, " line ", "")
                cdLHS(cdIndex) = RTrim(LTrim(Split(condition, "=")(0)))
                cdRHS(cdIndex) = RTrim(LTrim(Split(condition, "=")(1)))
                cdIndex = cdIndex + 1
            End If
        
        End If
        
        'statement:
        
        If (InStr(validation, "else:") > 0) Then
            If (InStr(validation, "then,") > 0) Then
                statement = RTrim(LTrim(Split(Split(validation, "else:")(0), "then,")(1)))
            ElseIf (InStr(validation, "Then,") > 0) Then
                statement = RTrim(LTrim(Split(Split(validation, "else:")(0), "Then,")(1)))
            End If
            
        ElseIf (InStr(validation, "Else:") > 0) Then
            
            If (InStr(validation, "then,") > 0) Then
                statement = RTrim(LTrim(Split(Split(validation, "Else:")(0), "then,")(1)))
            ElseIf (InStr(validation, "Then,") > 0) Then
                statement = RTrim(LTrim(Split(Split(validation, "Else:")(0), "Then,")(1)))
            End If
            
            'statement = Split(Split(validation, "Else:")(0), "then,")(1)
        Else
            If (InStr(validation, "then,") > 0) Then
                statement = RTrim(LTrim(Split(validation, "then,")(1)))
            ElseIf (InStr(validation, "Then,") > 0) Then
                statement = RTrim(LTrim(Split(validation, "Then,")(1)))
            End If
            'statement = Split(validation, "then,")(1)
        End If
        
        If (InStr(statement, "&&") > 0) Then 'there is more than one statements
            statements = Split(statement, "&&")
            'statements.Size
            length = (UBound(Split(statement, "&&"), 1) - LBound(Split(statement, "&&"), 1))
            'statements.Len
            'Split(statement, "&&").Count
            
            For i = 0 To length
                If (statements(i) <> Empty) Then
                    statements(i) = Replace(statements(i), vbLf, "")
                    If (InStr(LCase(statements(i)), "continue to") > 0) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = nextline
                            stRHS(stIndex) = "continue"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = RTrim(LTrim(Split(statements(i), " ")(3)))
                            stRHS(stIndex) = "continue"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "skip")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = nextline
                            stRHS(stIndex) = "skip"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = RTrim(LTrim(Split(statements(i), " ")(2)))
                            stRHS(stIndex) = "skip"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "return to")) Then
                        If (InStr(LCase(statements(i)), "previous line") > 0) Then
                            stLHS(stIndex) = currentLine - 1
                            stRHS(stIndex) = "return"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = RTrim(LTrim(Split(statements(i), " ")(3)))
                            stRHS(stIndex) = "return"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "confirm")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = nextline
                            stRHS(stIndex) = "confirm"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                           stLHS(stIndex) = RTrim(LTrim(Split(statements(i), " ")(4)))
                            stRHS(stIndex) = "confirm"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "line entry") > 0) Then
                        stLHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(statements(i), "line entry ", ""), "=")(0)))
                        stRHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(statements(i), "line entry ", ""), "=")(1)))
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "line entries") > 0) Then
                        'statements (i)
                    ElseIf (InStr(LCase(statements(i)), "revert_changes_to_line") > 0) Then
                        stRHS(stIndex) = "revert_changes_to_line"
                        stLHS(stIndex) = Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "reset_values_on_line") > 0) Then
                        stRHS(stIndex) = "reset_values_on_line"
                        stLHS(stIndex) = Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                    Else 'all default options:
                        stLHS(stIndex) = "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                    End If
                End If
            Next
        
        Else ' only one statement exists:
            If (statement <> Empty) Then
                statement = Replace(statement, vbLf, "")
                If (InStr(LCase(statement), "continue to") > 0) Then
                    If (InStr(LCase(statement), "next line") > 0) Then
                        stLHS(stIndex) = nextline
                        stRHS(stIndex) = "continue"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statement), "line") > 0) Then
                        stLHS(stIndex) = RTrim(LTrim(Split(statement, " ")(3)))
                        stRHS(stIndex) = "continue"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(statement), "skip") > 0) Then
                    If (InStr(LCase(statement), "next line") > 0) Then
                        stLHS(stIndex) = nextline
                        stRHS(stIndex) = "skip"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statement), "line") > 0) Then
                        stLHS(stIndex) = RTrim(LTrim(Split(statement, " ")(2)))
                        stRHS(stIndex) = "skip"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(statement), "return to") > 0) Then
                    If (InStr(LCase(statement), "next line") > 0) Then
                        stLHS(stIndex) = nextline
                        stRHS(stIndex) = "return"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statement), "line") > 0) Then
                        stLHS(stIndex) = RTrim(LTrim(Split(statement, " ")(3)))
                        stRHS(stIndex) = "return"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(statement), "confirm") > 0) Then
                    If (InStr(LCase(statement), "next line") > 0) Then
                        stLHS(stIndex) = nextline
                        stRHS(stIndex) = "confirm"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statement), "line") > 0) Then
                        stLHS(stIndex) = RTrim(LTrim(Split(statement, " ")(4)))
                        stRHS(stIndex) = "confirm"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(statement), "line entry") > 0) Then
                        stLHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(Replace(statement, "line entry", ""), "Line entry", ""), "=")(0)))
                        stRHS(stIndex) = "set_" + RTrim(LTrim(Split(Replace(Replace(statement, "line entry", ""), "Line entry", ""), "=")(1)))
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(statement), "revert_changes_to_line") > 0) Then
                        stRHS(stIndex) = "revert_changes_to_line"
                        stLHS(stIndex) = Split(RTrim(LTrim(statement)), " ")(1)
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(statement), "reset_values_on_line") > 0) Then
                        stRHS(stIndex) = "reset_values_on_line"
                        stLHS(stIndex) = Split(RTrim(LTrim(statement)), " ")(1)
                        stIndex = stIndex + 1
                Else 'all default options:
                        stLHS(stIndex) = "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                End If
            End If
        
        End If
        
        
        
        
    End If
    
    
    
    Dim temp As String
    
    
    
    'datasheet.Cells(currentrow, 25).value = ""
    temp = datasheet.Cells(currentRow, 31).Value  ' chnaged 25 to 31
    
    
    'stIndex = 0
    'cdIndex = 0
    
    If (InStr(LCase(validation), "else:") > 0) Then 'if the validation contains else,
    
        If (InStr(validation, "then,") > 0) Then
            condition = RTrim(LTrim(Split(validation, "then,")(0)))
        ElseIf (InStr(validation, "Then,") > 0) Then
            condition = RTrim(LTrim(Split(validation, "Then,")(0)))
        End If
        
        'condition = Split(validation, "then,")(0)
        
        If (InStr(condition, "&&") > 0) Then 'there is more than one condition to satisfy
            conditions = Split(condition, "&&")
            length = (UBound(Split(condition, "&&"), 1) - LBound(Split(condition, "&&"), 1))
            For i = 0 To length
                If (conditions(i) <> Empty) Then
                    If (InStr(conditions(i), "=") > 0) Then
                        conditions(i) = Replace(Replace(Replace(conditions(i), "if line", ""), "If line", ""), "line", "")
                        cdLHS(cdIndex) = "e_" + RTrim(LTrim(Split(conditions(i), "=")(0)))
                        cdRHS(cdIndex) = "e_" + RTrim(LTrim(Split(conditions(i), "=")(1)))
                        cdIndex = cdIndex + 1
                    End If
                End If
            Next
        
        Else ' only one condition exists:
            If (InStr(condition, "=") > 0) Then
                condition = RTrim(LTrim(Replace(Replace(condition, "if line", ""), "If line", "")))
                condition = Replace(condition, " line ", "")
                cdLHS(cdIndex) = "e_" + RTrim(LTrim(Split(condition, "=")(0)))
                cdRHS(cdIndex) = "e_" + RTrim(LTrim(Split(condition, "=")(1)))
                cdIndex = cdIndex + 1
            End If
        
        End If
        
        If (InStr(validation, "else:") > 0) Then
            statement = Split(validation, "else:")(1)
        ElseIf (InStr(validation, "Else:") > 0) Then
            statement = Split(validation, "Else:")(1)
        End If
        
        'statement = Split(validation, "else:")(1)
        'validation = Split(validation, ":")(0)
        'check if there are more than one statement specified in the else condition:
        If (InStr(statement, "&&") > 0) Then 'if there are more than one statement specified in else
            statements = Split(statement, "&&")
            length = (UBound(Split(statement, "&&"), 1) - LBound(Split(statement, "&&"), 1))
            For i = 0 To length
                If (statements(i) <> Empty) Then
                    statements(i) = RTrim(LTrim(Replace(statements(i), vbLf, "")))
                    If (InStr(LCase(statements(i)), "continue to") > 0) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "e_" + CStr(nextline)
                            stRHS(stIndex) = "e_continue"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "e_" + Split(statements(i), " ")(3)
                            stRHS(stIndex) = "e_continue"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "skip")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "e_" + CStr(nextline)
                            stRHS(stIndex) = "e_skip"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "e_" + Split(statements(i), " ")(2)
                            stRHS(stIndex) = "e_skip"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "return to")) Then
                        If (InStr(LCase(statements(i)), "previous line") > 0) Then
                            stLHS(stIndex) = "e_" + CStr(currentLine - 1)
                            stRHS(stIndex) = "e_return"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "e_" + Split(statements(i), " ")(3)
                            stRHS(stIndex) = "e_return"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "confirm")) Then
                        If (InStr(LCase(statements(i)), "next line") > 0) Then
                            stLHS(stIndex) = "e_" + CStr(nextline)
                            stRHS(stIndex) = "e_confirm"
                            stIndex = stIndex + 1
                        ElseIf (InStr(LCase(statements(i)), "line")) Then
                            stLHS(stIndex) = "e_" + Split(statements(i), " ")(4)
                            stRHS(stIndex) = "e_confirm"
                            stIndex = stIndex + 1
                        End If
                    ElseIf (InStr(LCase(statements(i)), "line entry") > 0) Then
                        stLHS(stIndex) = "e_set_" + Split(Replace(Replace(statements(i), "line entry", ""), "Line entry", ""), "=")(0)
                        stRHS(stIndex) = "e_set_" + Split(Replace(Replace(statements(i), "line entry", ""), "Line entry", ""), "=")(1)
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "revert_changes_to_line") > 0) Then
                        stRHS(stIndex) = "e_revert_changes_to_line"
                        stLHS(stIndex) = "e_" + Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statements(i)), "reset_values_on_line") > 0) Then
                        stRHS(stIndex) = "e_reset_values_on_line"
                        stLHS(stIndex) = "e_" + Split(RTrim(LTrim(statements(i))), " ")(1)
                        stIndex = stIndex + 1
                        
                    Else 'all default options:
                        stLHS(stIndex) = "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                    End If
                End If
            Next
        
        Else 'if there is only one statement specified in else:
            If (statement <> Empty) Then
                statement = RTrim(LTrim(Replace(statement, vbLf, "")))
                If (InStr(LCase(statement), "continue to") > 0) Then
                    If (InStr(LCase(statement), "next line") > 0) Then
                        stLHS(stIndex) = "e_" + CStr(nextline)
                        stRHS(stIndex) = "e_continue"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statement), "line") > 0) Then
                        stLHS(stIndex) = "e_" + Split(statement, " ")(3)
                        stRHS(stIndex) = "e_continue"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(statement), "skip") > 0) Then
                    If (InStr(LCase(statement), "next line") > 0) Then
                        stLHS(stIndex) = "e_" + CStr(nextline)
                        stRHS(stIndex) = "e_skip"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statement), "line") > 0) Then
                        stLHS(stIndex) = "e_" + Split(statement, " ")(2)
                        stRHS(stIndex) = "e_skip"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(statement), "return to") > 0) Then
                    If (InStr(LCase(statement), "next line") > 0) Then
                        stLHS(stIndex) = "e_" + CStr(nextline)
                        stRHS(stIndex) = "e_return"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statement), "line") > 0) Then
                        stLHS(stIndex) = "e_" + Split(statement, " ")(3)
                        stRHS(stIndex) = "e_return"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(statement), "confirm") > 0) Then
                    If (InStr(LCase(statement), "next line") > 0) Then
                       stLHS(stIndex) = "e_" + CStr(nextline)
                        stRHS(stIndex) = "e_confirm"
                        stIndex = stIndex + 1
                    ElseIf (InStr(LCase(statement), "line") > 0) Then
                        stLHS(stIndex) = "e_" + Split(statement, " ")(4)
                        stRHS(stIndex) = "e_confirm"
                        stIndex = stIndex + 1
                    End If
                ElseIf (InStr(LCase(statement), "line entry") > 0) Then
                        stLHS(stIndex) = "e_set_" + Split(Replace(Replace(statement, "line entry", ""), "Line entry", ""), "=")(0)
                        stRHS(stIndex) = "e_set_" + Split(Replace(Replace(statement, "line entry", ""), "Line entry", ""), "=")(1)
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(statement), "revert_changes_to_line") > 0) Then
                        stLHS(stIndex) = "e_" + Split(RTrim(LTrim(statement)), " ")(1)
                        stRHS(stIndex) = "e_revert_changes_to_line"
                        stIndex = stIndex + 1
                ElseIf (InStr(LCase(statement), "reset_values_on_line") > 0) Then
                        stLHS(stIndex) = "e_" + Split(RTrim(LTrim(statement)), " ")(1)
                        stRHS(stIndex) = "e_reset_values_on_line"
                        stIndex = stIndex + 1
                Else 'all default options:
                        stLHS(stIndex) = "Not_implemented"
                        stRHS(stIndex) = "Not_implemented"
                        stIndex = stIndex + 1
                End If
            End If
        End If
    End If
    
    
    length = (UBound(cdLHS, 1) - LBound(cdLHS, 1))
    'temp = datasheet.Cells(currentLine, 25).value
    
    
    
    If (cdIndex <> 0 And stIndex <> 0) Then
    
    
    temp = "["
    
    
    For i = 0 To length
        If (cdLHS(i) <> Empty) Then
        If (i = cdIndex - 1) Then
            temp = temp + "'" + cdLHS(i) + "'"
        Else
            temp = temp + "'" + cdLHS(i) + "',"
        End If
        End If
    Next
    
    temp = temp + "],["
    
    For i = 0 To length
        If (cdRHS(i) <> Empty) Then
        If (i = cdIndex - 1) Then
            temp = temp + "'" + cdRHS(i) + "'"
        Else
            temp = temp + "'" + cdRHS(i) + "',"
        End If
        End If
    Next
    
    temp = temp + "],["
    
    length = (UBound(stLHS, 1) - LBound(stLHS, 1))
    If (length > 0) Then
    For i = 0 To length
        If (stLHS(i) <> Empty) Then
        If (i = stIndex - 1) Then
            temp = temp + "'" + stLHS(i) + "'"
        Else
            temp = temp + "'" + stLHS(i) + "',"
        End If
        End If
    Next
    
    temp = temp + "],["
    
    For i = 0 To length
    If (stRHS(i) <> Empty) Then
        If (i = stIndex - 1) Then
            temp = temp + "'" + stRHS(i) + "'"
        Else
            temp = temp + "'" + stRHS(i) + "',"
        End If
        End If
    Next
    End If
    temp = temp + "]"
    
    End If
    datasheet.Cells(currentRow, 31).Value = temp ' changed 25 to 31
    
    
    If (InStr(validation, "else-if") > 0) Then

    End If
    

End Sub







